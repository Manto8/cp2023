<h1>關於</h1>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><a href="https://github.com/mdecycu/cmsite">https://github.com/mdecycu/cmsite</a><a href="https://github.com/mdecycu/cmsite"></a></span></span></span></span></span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><a href="https://github.com/Manto8/cp2023">https://github.com/Manto8/cp2023</a>(個人倉儲連結)</span></span></span></span></span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><a href="https://github.com/41223133/cp2023_ag3">https://github.com/41223133/cp2023_ag3</a>(分組倉儲連結)</span></span></span></span></span></span></span></span></p>
<h1>作業內容</h1>
<h2>W2</h2>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EflMzDYwTjdIm2KJB7SCYkwB1_6UTQ4mzUdDx-bwN22E8A?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=ZN0EPP">說明安裝 Apps, 如何設定網路, 查驗是否正確連網</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/Ef4xqA-zGsxFlnrsIq1WhRQBt7HalMhjXLb5hzLRmprYOQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=a7Oaxo">說明如何利用近端可攜系統執行 C 程式, 如何利用 ChatGPT 進行對話</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EZ97ogpobtpCv2BxYJfDGjEBgadG6gPZJYN5TbB7clrMtA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=PcbKn5">說明如何利用 Replit 協助編輯網頁內容</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EW-FcfDAaMZPjdA8nFjgCHEBpp8yPr7wSoi9RsxmyLbZpA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=E1T3vG">說明如何 connect Replit to Github, 如何建立個人網站並利用 Replit 啟動編輯網站</a></p>
<h2>W3</h2>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EbXrVO6Jeb5Gnn47Dvpv7pYBftMz4z9evscZ-Spxxmk7mw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=RiZ5wB">有關電腦輔助設計室網路設定說明</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/Eb1u9lGQSotOpxiJTQeFVwEBq-FxJEDTnTkuUL0jlGdnFQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=zcA6Qt">處理 .replit 與 replit.nix 中的舊 Python 設定問題</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EUVPlEOxYxdCkQyT9rX-B64BK_SNHRJaz52HloupubxlMw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=W03gHn">說明如何為 site-個人github帳號 倉儲設定 Github Pages</a></p>
<h2>W4</h2>
<p><span>各學員自行建立線上考試帳號</span></p>
<p><span><span><span><span><span><span><span>借鏡</span></span></span></span></span><a href="https://qry.nfu.edu.tw/teacher.php?selyr=1121&amp;teacher=%E5%9A%B4%E5%AE%B6%E9%8A%98"><span><span><span><span><span>112學年第一學期教師授課表</span></span></span></span></span></a><span><span><span><span><span>中的學員修課名單，利用Teams中的Excel取得學員Github帳號。</span></span></span></span></span></span><span> </span><a href="https://qry.nfu.edu.tw/teacher.php?selyr=1121&amp;teacher=%E5%9A%B4%E5%AE%B6%E9%8A%98"><span></span></a><span></span></span></p>
<p><span><span><span><span><span><span><span>各學員自行建立Github評分文件cp2023，並設定Github Pages</span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>登入Github後，以 </span></span></span></span></span></span><a href="https://github.com/mdecycu/cmsite"><span><span><span><span><span><span>https://github.com/mdecycu/cmsite</span></span></span></span></span></span></a><span><span><span><span><span><span> 為範本建立cp2023錢包</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span>在Replit IDE上啟動cp2023內容編輯網站，將修改版本內容自動至Github</span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>在同時登入 Github 和 Replit 的情況下，將 Replit 帳號連結至 Github 帳號</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>利用 import 將 cp2023 導入 Replit</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>設定 .replit 為 python3 main.py</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>根據 cp2023 錢包中的 README.md 在 Shell 區執行 git submodule 和 pip install</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>以 Run 執行 main.py 啟動以太坊內容編輯網頁</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>利用</span></span></span></span></span></span><a href="https://mde.tw/cpnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py"><span><span><span><span><span><span>密碼產生程式</span></span></span></span></span></span></a><span><span><span><span><span><span>將指定的管理員密碼字符串存入工具-秘密頁面中的設定變數（若無設定環境變數設置，動態網站登錄管理員密碼將由錢包中的config/config字符串進行驗證）</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>重新啟動以太坊內容編輯網頁後，以新管理員密碼登入改版後並轉換為靜態內容後，在Git頁面中將改版推至Github</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span>在 Replit cp2023 專案中設定 C 程式與 Gnuplot 執行環境，完成</span></span></span></span></span></span><a href="https://mde.tw/cpnote/content/%E4%B8%8A%E8%AA%B2%E5%85%A7%E5%AE%B9.html"><span><span><span><span><span><span>課程內容的練習</span></span></span></span></span></span></a></span></p>
<p><span><span><span><span><span><span>replit.nix</span></span></span></span></span><a href="https://mde.tw/cpnote/content/w2-w5.html"><span><span><span><span><span>內建gnuplot套件</span></span></span></span></span></a></span><span> </span><a href="https://mde.tw/cpnote/content/w2-w5.html"><span></span></a></p>
<p><span><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EZYZvhkOEnxFrCnVI_VuvpYBIqzEWtPCWnyvqhrRqC_TgQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=1axakq"><span><span><span><span><span><span>w5 1b cp2023 與 Replit C 程式執行環境說明影片.mp4</span></span></span></span></span></span></a></span></p>
<p><span><span><span><span><span><span><span>設定流程使用的參考網站： <span> </span></span></span></span></span></span></span><a href="https://scrum-1.github.io/cp2023/content/w5.html"><span><span><span><span><span><span>https://scrum-1.github.io/cp2023/content/w5.html</span></span></span></span></span></span></a> </span></p>
<p><span><span><span><span><span><span><span>設定程式使用的Repl：</span></span></span></span></span><a href="https://replit.com/@scrum1/cp2023"><span><span><span><span><span>https://replit.com/@scrum1/cp2023</span></span></span></span></span></a><span><span><span><span><span><span> </span> （包含</span></span></span></span></span><a href="https://replit.com/@scrum1/cp2023#replit.nix"><span><span><span><span><span>replit.nix</span></span></span></span></span></a><span><span><span><span><span>設定檔）</span></span></span></span></span></span><span> </span><a href="https://replit.com/@scrum1/cp2023"><span></span></a><span></span><span> </span><a href="https://replit.com/@scrum1/cp2023#replit.nix"><span></span></a><span> </span><span></span></span></p>
<p><span><span><span><span><span><span><span>收集牛頓第二運動動力學、質量彈簧制動系統、歐拉法數值分析相關資料</span></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>將</span></span></span></span></span><a href="https://mde.tw/cpnote/content/MSD.html"><span><span><span><span><span>euler_gnuplot_msd_ex1.c</span></span></span></span></span></a><span><span><span><span><span><span> 放入downloads目錄中,以 cc euler_gnuplot_msd_ex1.c -o euler_gnuplot_msd_ex1 產生euler_gnuplot_msd_ex1執行檔後,以 ./euler_ex1 產生euler_gnuplot_msd_ex1執行檔後,以 ./euler_ex1 產生euler_gnuplot_msd_ex1執行檔後,以 ./euler_ex1 產生euler_gnuplot_msd_ex1執行檔後,以 ./euler_ex1 產生euler_exler_exler_/執行檔之後，以./euler_ex1產生euler_gnuplot_msd_ex1執行檔後，以./euler_ex1 產生euler_gnuplot_msd_ex1 執行檔後，以./euler_ex1 生成</span></span></span></span></span></span></span><span> </span><a href="https://mde.tw/cpnote/content/MSD.html"><span></span></a><span><span></span></span></p>
<p><span><span><span><span><span><span><span>最後可以在 images 目錄中得到</span></span></span></span></span><a href="https://mde.tw/cpnote/images/motion_plot.png"><span><span><span><span><span>motion_plot.png</span></span></span></span></span></a><span><span><span><span><span>模擬結果</span></span></span></span></span></span><span> </span><a href="https://mde.tw/cpnote/images/motion_plot.png"><span></span></a><span> </span><span></span></span></p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EWd1cR2zOStOjVSduSw6pQMBv1fB6tWu-P9qfVH2YxbDPw?e=uOZW7N"><span><span><span><span><span><span>jsliu_c_programming.pdf</span></span></span></span></span></span></a><span><span><span><span><span><span><span> </span>(需要下載密碼)</span></span></span></span></span></span><span> </span><span><span><span></span></span></span></p>
<p><a href="https://link.springer.com/content/pdf/10.1007/978-1-4842-5064-8_1.pdf?pdf=inline%20link"><span><span><span><span><span><span>C簡介</span></span></span></span></span></span></a><span><span><span><span><span><span> (環球校園網路或VPN下載)</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><span>修改者利用 </span></span></span></span></span></span><a href="https://github.com/mdecycu/cmsite"><span><span><span><span><span><span>https://github.com/mdecycu/cmsite</span></span></span></span></span></span></a><span><span><span><span><span><span> 以太坊模板，創建名稱為cp2023作為評分以太坊</span></span></span></span></span></span></span><span><span><span><span><span><span>。</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>近端執行:</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>SciTE 與 Tiny C Compiler 修改設定為 Tools - Compile 之後產生產生檔位 a.out, cpp.properties 設定檔必須如下：</span></span></span></span></span></span></p>
<div>
<div class="syntaxhighlighter js" id="highlighter_36224">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2"><span><span><span><span><span><span>1</span></span></span></span></span></span></div>
<div class="line number2 index1 alt1"><span><span><span><span><span><span>2</span></span></span></span></span></span></div>
<div class="line number3 index2 alt2"><span><span><span><span><span><span>3</span></span></span></span></span></span></div>
<div class="line number4 index3 alt1"><span><span><span><span><span><span>4</span></span></span></span></span></span></div>
<div class="line number5 index4 alt2"><span><span><span><span><span><span>5</span></span></span></span></span></span></div>
<div class="line number6 index5 alt1"><span><span><span><span><span><span>6</span></span></span></span></span></span></div>
<div class="line number7 index6 alt2"><span><span><span><span><span><span>7</span></span></span></span></span></span></div>
<div class="line number8 index7 alt1"><span><span><span><span><span><span>8</span></span></span></span></span></span></div>
<div class="line number9 index8 alt2"><span><span><span><span><span><span>9</span></span></span></span></span></span></div>
<div class="line number10 index9 alt1"><span><span><span><span><span><span>10</span></span></span></span></span></span></div>
<div class="line number11 index10 alt2"><span><span><span><span><span><span>11</span></span></span></span></span></span></div>
<div class="line number12 index11 alt1"><span><span><span><span><span><span>12</span></span></span></span></span></span></div>
<div class="line number13 index12 alt2"><span><span><span><span><span><span>13</span></span></span></span></span></span></div>
<div class="line number14 index13 alt1"><span><span><span><span><span><span>14</span></span></span></span></span></span></div>
<div class="line number15 index14 alt2"><span><span><span><span><span><span>15</span></span></span></span></span></span></div>
<div class="line number16 index15 alt1"><span><span><span><span><span><span>16</span></span></span></span></span></span></div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">ccopts=-pedantic -Os</code></div>
<div class="line number2 index1 alt1"><code class="js preprocessor">#cc=g++ $(ccopts) -c $(FileNameExt) -o $(FileName).o</code></div>
<div class="line number3 index2 alt2"><code class="js preprocessor">#ccc=gcc $(ccopts) -c $(FileNameExt) -o $(FileName).o</code></div>
<div class="line number4 index3 alt1"><code class="js plain">cc=tcc.exe -run </code></div>
<div class="line number5 index4 alt2"><code class="js plain">ccc=tcc.exe -o a.out</code></div>
<div class="line number6 index5 alt1"> </div>
<div class="line number7 index6 alt2"><code class="js plain">make.command=make</code></div>
<div class="line number8 index7 alt1"><code class="js preprocessor">#command.compile.*.c=$(ccc) -std=c99</code></div>
<div class="line number9 index8 alt2"><code class="js plain">command.compile.*.c=$(ccc) $(FileNameExt)</code></div>
<div class="line number10 index9 alt1"><code class="js plain">command.build.*.c=$(make.command)</code></div>
<div class="line number11 index10 alt2"><code class="js plain">command.build.*.h=$(make.command)</code></div>
<div class="line number12 index11 alt1"><code class="js plain">command.clean.*.c=$(make.command) clean</code></div>
<div class="line number13 index12 alt2"><code class="js plain">command.clean.*.h=$(make.command) clean</code></div>
<div class="line number14 index13 alt1"><code class="js preprocessor"># use tcc to run .c program</code></div>
<div class="line number15 index14 alt2"><code class="js preprocessor">#command.go.*.c=./$(FileName)</code></div>
<div class="line number16 index15 alt1"><code class="js plain">command.go.*.c=$(cc) $(FileNameExt)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><span><span><span><span><span><span>雲端堡壘：</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>範例：</span></span></span></span></span><a href="https://replit.com/@wcms/cjavascriptpython"><span><span><span><span><span>https://replit.com/@wcms/cjavascriptpython</span></span></span></span></span></a></span><span> </span><a href="https://replit.com/@wcms/cjavascriptpython"><span></span></a></p>
<p><span><span><span><span><span><span>將位於個人Github帳號下的cp2023檔案（建議以</span></span></span></span></span><a href="https://github.com/mdecycu/cmsite"><span><span><span><span><span>https://github.com/mdecycu/cmsite</span></span></span></span></span></a><span><span><span><span><span>作為範本）匯入Replit，以git submodule update --init鏟子模組，然後以pip installflaskflask_cors bs4 l安裝啟動編輯網站需要模組後，將config/config密碼編碼移至Secrets頁面中的config變數後啟動。</span></span></span></span></span></span><span> </span><a href="https://github.com/mdecycu/cmsite"><span></span></a><span> </span><span></span></p>
<p><span><span><span><span><span><span>修改replit.nix如下，表示要安裝gnuplot套件：</span></span></span></span></span></span></p>
<div>
<div class="syntaxhighlighter js" id="highlighter_439830">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2"><span><span><span><span><span><span>1</span></span></span></span></span></span></div>
<div class="line number2 index1 alt1"><span><span><span><span><span><span>2</span></span></span></span></span></span></div>
<div class="line number3 index2 alt2"><span><span><span><span><span><span>3</span></span></span></span></span></span></div>
<div class="line number4 index3 alt1"><span><span><span><span><span><span>4</span></span></span></span></span></span></div>
<div class="line number5 index4 alt2"><span><span><span><span><span><span>5</span></span></span></span></span></span></div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">{ pkgs }: {</code></div>
<div class="line number2 index1 alt1"><code class="js spaces">  </code><code class="js plain">deps = [</code></div>
<div class="line number3 index2 alt2"><code class="js spaces">    </code><code class="js plain">pkgs.gnuplot</code></div>
<div class="line number4 index3 alt1"><code class="js spaces">  </code><code class="js plain">];</code></div>
<div class="line number5 index4 alt2"><code class="js plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><span><span><span><span><span><span>之後將所練習的C程式放置到下載目錄中，其執行圖像結果存入圖像後，分別在網頁中引用。</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>練習：</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>請從 </span></span></span></span></span></span><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EWd1cR2zOStOjVSduSw6pQMBv1fB6tWu-P9qfVH2YxbDPw?e=uOZW7N"><span><span><span><span><span><span>jsliu_c_programming.pdf</span></span></span></span></span></span></a><span><span><span><span><span><span>（需下載密碼）與 </span></span></span></span></span><a href="https://link.springer.com/content/pdf/10.1007/978-1-4842-5064-8_1.pdf?pdf=inline%20link"><span><span><span><span><span>C簡介</span></span></span></span></span></a><span><span><span><span><span><span> </span> （高等教育校園網路或VPN下載）電子手冊各抽取10個C程式範例，分別：</span></span></span></span></span></span><span> </span><span><span><span></span></span></span><a href="https://link.springer.com/content/pdf/10.1007/978-1-4842-5064-8_1.pdf?pdf=inline%20link"><span><span><span></span></span></span></a><span><span><span></span></span></span></p>
<ol>
<li><span><span><span><span><span><span>在可移植程式環境中以 SciTE + Tiny C Compiler 編譯系統，使用 Tools - Go 類別編譯方式執行。</span></span></span></span></span></span></li>
<li><span><span><span><span><span><span>在可移植程式環境中以 SciTE + Tiny C Compiler 編譯系統，使用 Tools - Compile 編譯連結後得到 a.out，然後在指令列中以 a.out 執行。</span></span></span></span></span></span></li>
<li><span><span><span><span><span><span>在 Replit 全球資訊網 IDE 環境中的 Shell 頁面，以 cc ex1.c 產生產生檔案 a.out，並以 ./a.out 執行，或以 cc ex1.c -o ex1 指定編譯連結後的執行檔名稱為ex1後，以./ex1執行。</span></span></span></span></span></span></li>
</ol>
<p><span><span><span><span><span><span>最後將選定的C範例執行過程及相關說明內容程序，整理在</span></span></span></span></span></span><span><span><span><span><span><span><span>個人github帳號下的cp2023入口網頁</span></span></span></span></span></span></span><span><span><span><span><span><span>中的c_ex頁面。</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>參考：</span></span></span></span></span></span></p>
<p><span><span><span><span>C程式</span></span></span><span><span><span>語言簡介</span></span></span><span><span><span>（</span></span></span></span><a href="https://inst.eecs.berkeley.edu/~cs61c/su21/pdfs/lectures/fa20-trimmed/lec03.pdf"><span><span><span><span>1、2、3</span></span></span></span></a><span><a href="https://inst.eecs.berkeley.edu/~cs61c/su21/pdfs/lectures/fa20-trimmed/lec04.pdf"><span><span><span>或</span></span></span></a><span><span><span>附</span></span></span><a href="https://inst.eecs.berkeley.edu/~cs61c/su21/pdfs/lectures/fa20-trimmed/lec05.pdf"><span><span><span>密碼</span></span></span></a><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ET9_kFFrXg1DslVFqcV9hRABUcxDKnKsdnPyB6nsQFQKdQ?e=k6DGWl"><span><span><span>下載</span></span></span></a><span><span><span>）</span></span></span></span><span> </span><a href="https://inst.eecs.berkeley.edu/~cs61c/su21/pdfs/lectures/fa20-trimmed/lec04.pdf"><span></span></a><span></span><span> </span><a href="https://inst.eecs.berkeley.edu/~cs61c/su21/pdfs/lectures/fa20-trimmed/lec05.pdf"><span></span></a><span></span><span> </span><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ET9_kFFrXg1DslVFqcV9hRABUcxDKnKsdnPyB6nsQFQKdQ?e=k6DGWl"><span></span></a><span></span></p>
<p><span><span><span><span>使用者輸入兩個整數後相加的C程式範例：</span></span></span></span></p>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_709659">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2"><span><span><span><span>1</span></span></span></span></div>
<div class="line number2 index1 alt1"><span><span><span><span>2</span></span></span></span></div>
<div class="line number3 index2 alt2"><span><span><span><span>3</span></span></span></span></div>
<div class="line number4 index3 alt1"><span><span><span><span>4</span></span></span></span></div>
<div class="line number5 index4 alt2"><span><span><span><span>5</span></span></span></span></div>
<div class="line number6 index5 alt1"><span><span><span><span>6</span></span></span></span></div>
<div class="line number7 index6 alt2"><span><span><span><span>7</span></span></span></span></div>
<div class="line number8 index7 alt1"><span><span><span><span>8</span></span></span></span></div>
<div class="line number9 index8 alt2"><span><span><span><span>9</span></span></span></span></div>
<div class="line number10 index9 alt1"><span><span><span><span>10</span></span></span></span></div>
<div class="line number11 index10 alt2"><span><span><span><span>11</span></span></span></span></div>
<div class="line number12 index11 alt1"><span><span><span><span>12</span></span></span></span></div>
<div class="line number13 index12 alt2"><span><span><span><span>13</span></span></span></span></div>
<div class="line number14 index13 alt1"><span><span><span><span>14</span></span></span></span></div>
<div class="line number15 index14 alt2"><span><span><span><span>15</span></span></span></span></div>
<div class="line number16 index15 alt1"><span><span><span><span>16</span></span></span></span></div>
<div class="line number17 index16 alt2"><span><span><span><span>17號</span></span></span></span></div>
<div class="line number18 index17 alt1"><span><span><span><span>18</span></span></span></span></div>
<div class="line number19 index18 alt2"><span><span><span><span>19</span></span></span></span></div>
<div class="line number20 index19 alt1"><span><span><span><span>20</span></span></span></span></div>
<div class="line number21 index20 alt2"><span><span><span><span>21</span></span></span></span></div>
<div class="line number22 index21 alt1"><span><span><span><span>22</span></span></span></span></div>
<div class="line number23 index22 alt2"><span><span><span><span>23</span></span></span></span></div>
<div class="line number24 index23 alt1"><span><span><span><span>24</span></span></span></span></div>
<div class="line number25 index24 alt2"><span><span><span><span>25</span></span></span></span></div>
<div class="line number26 index25 alt1"><span><span><span><span>26</span></span></span></span></div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp comments">/* Read in two integers , add them and display the answer */</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#define _CRT_SECURE_NO_WARNINGS</code></div>
<div class="line number3 index2 alt2"><code class="cpp preprocessor">#include&lt;stdio.h&gt;</code></div>
<div class="line number4 index3 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main()</code></div>
<div class="line number5 index4 alt2"><code class="cpp plain">{</code></div>
<div class="line number6 index5 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">this_is_a_number1, this_is_a_number2, total;</code></div>
<div class="line number7 index6 alt2"><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Please enter an integer number:\n "</code><code class="cpp plain">);</code></div>
<div class="line number8 index7 alt1"><code class="cpp comments">/* read number in */</code></div>
<div class="line number9 index8 alt2"><code class="cpp keyword bold">if</code> <code class="cpp plain">(</code><code class="cpp functions bold">scanf</code><code class="cpp plain">(</code><code class="cpp string">"%d"</code><code class="cpp plain">, &amp;this_is_a_number1) == 1) {</code></div>
<div class="line number10 index9 alt1"><code class="cpp spaces">      </code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%d"</code><code class="cpp plain">, this_is_a_number1);</code></div>
<div class="line number11 index10 alt2"><code class="cpp spaces">    </code><code class="cpp plain">} </code><code class="cpp keyword bold">else</code> <code class="cpp plain">{</code></div>
<div class="line number12 index11 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Failed to read integer.\n"</code><code class="cpp plain">);</code></div>
<div class="line number13 index12 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number14 index13 alt1"> </div>
<div class="line number15 index14 alt2"><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"You entered %d\n"</code><code class="cpp plain">, this_is_a_number1);</code></div>
<div class="line number16 index15 alt1"><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Please enter another number: \n"</code><code class="cpp plain">);</code></div>
<div class="line number17 index16 alt2"><code class="cpp keyword bold">if</code> <code class="cpp plain">(</code><code class="cpp functions bold">scanf</code><code class="cpp plain">(</code><code class="cpp string">"%d"</code><code class="cpp plain">, &amp;this_is_a_number2) == 1) {</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces">      </code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%d"</code><code class="cpp plain">, this_is_a_number1);</code></div>
<div class="line number19 index18 alt2"><code class="cpp spaces">    </code><code class="cpp plain">} </code><code class="cpp keyword bold">else</code> <code class="cpp plain">{</code></div>
<div class="line number20 index19 alt1"><code class="cpp spaces">      </code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Failed to read integer.\n"</code><code class="cpp plain">);</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number22 index21 alt1"><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"You entered %d\n"</code><code class="cpp plain">, this_is_a_number2);</code></div>
<div class="line number23 index22 alt2"><code class="cpp plain">total = this_is_a_number1 + this_is_a_number2;</code><code class="cpp comments">/* add two numbers */</code></div>
<div class="line number24 index23 alt1"><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"total is %d\n"</code><code class="cpp plain">, total);</code></div>
<div class="line number25 index24 alt2"><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number26 index25 alt1"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<h2>W5</h2>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_546789">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp plain">&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;</code><code class="cpp comments">// 包含標準輸出入程式庫的標頭文件&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp comments">// https://blog.csdn.net/weixin_38468077/article/details/101069365&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number3 index2 alt2"><code class="cpp comments">// http://www.gnuplot.info/demo/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number4 index3 alt1"><code class="cpp comments">// https://github.com/sysprog21/rv32emu&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number5 index4 alt2"><code class="cpp comments">// https://github.com/sysprog21/semu&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number6 index5 alt1"><code class="cpp comments">// https://docs.google.com/presentation/d/14N0cWG2SnBSqhc2cLF0_2VerB9FF8JN3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number7 index6 alt2"><code class="cpp comments">// https://cs61c.org/fa23/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number8 index7 alt1"><code class="cpp comments">// https://greenteapress.com/wp/think-python-2e/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number9 index8 alt2"><code class="cpp comments">// https://github.com/ecalvadi/c99-examples&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number10 index9 alt1"><code class="cpp comments">// https://github.com/gouravthakur39/beginners-C-program-examples&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number11 index10 alt2"><code class="cpp comments">// https://github.com/ergenekonyigit/Numerical-Analysis-Examples&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number12 index11 alt1"><code class="cpp comments">// https://www.che.ncku.edu.tw/facultyweb/changct/html/teaching/CPPandMATLAB/Past/pdf%20Files/Chap02-Ling.pdf&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number13 index12 alt2"><code class="cpp comments">// https://gteceducation.com.sg/Brochures/PROGRAMMING/C%20PROGRAMMING%20FULL.pdf&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number14 index13 alt1"><code class="cpp comments">// https://jsomers.github.io/cbook/cbook.pdf&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number15 index14 alt2"><code class="cpp comments">// https://jsomers.github.io/cbook/index.html&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number16 index15 alt1"><code class="cpp comments">// http://student.itee.uq.edu.au/courses/csse2310/CProgrammingNotes.pdf&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number17 index16 alt2"><code class="cpp comments">// http://cslibrary.stanford.edu/101/EssentialC.pdf&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number18 index17 alt1"><code class="cpp comments">// https://publications.gbdirect.co.uk/c_book/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number19 index18 alt2"><code class="cpp comments">// https://www.fossil-scm.org/fossil-book/doc/2ndEdition/fossilbook.pdf&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number20 index19 alt1"><code class="cpp comments">// ***** 在replit上執行&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number21 index20 alt2"><code class="cpp comments">// CD 下載&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number22 index21 alt1"><code class="cpp comments">// cc gnuplot_ex1.c -o gnuplot_ex1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number23 index22 alt2"><code class="cpp comments">// ./gnuplot_ex1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number24 index23 alt1"><code class="cpp preprocessor">#include &lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;</code></div>
<div class="line number25 index24 alt2"><code class="cpp plain">&lt;span&gt;&lt;/span&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;</code></div>
<div class="line number26 index25 alt1"><code class="cpp comments">// 主函式&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number27 index26 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 使用 popen 啟動 Gnuplot 進程&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*gnuplotPipe = popen(</code><code class="cpp string">"gnuplot -persistent"</code><code class="cpp plain">, </code><code class="cpp string">"w"</code><code class="cpp plain">);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp plain">如果（！gnuplotPipe）{&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;</code></div>
<div class="line number31 index30 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(stderr, </code><code class="cpp string">"無法啟動 Gnuplot。\n"</code><code class="cpp plain">);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;</code></div>
<div class="line number32 index31 alt1"><code class="cpp spaces">        </code><code class="cpp plain">返回1；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;</code></div>
<div class="line number34 index33 alt1"><code class="cpp plain">&lt;span&gt;&lt;/span&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;</code></div>
<div class="line number35 index34 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 使用Gnuplot繪圖指令，指定字體並輸出為PNG&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number36 index35 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"設定終端 png 字體 '預設,10' 大小 800,400\n"</code><code class="cpp plain">);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;</code></div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"設定輸出 './../images/gnuplot_ex1.png'\n"</code><code class="cpp plain">);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"強度 sin(x)"</code><code class="cpp plain">);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;</code></div>
<div class="line number39 index38 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 關閉popen&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;&lt;span style="vertical-align: inherit;"&gt;</code></div>
<div class="line number40 index39 alt1"><code class="cpp spaces">    </code><code class="cpp plain">pclose(gnuplotPipe);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;</code></div>
<div class="line number41 index40 alt2"><code class="cpp plain">&lt;span&gt;&lt;/span&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;</code></div>
<div class="line number42 index41 alt1"><code class="cpp spaces">    </code><code class="cpp plain">返回0；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;&lt;span style=</code><code class="cpp string">"vertical-align: inherit;"</code><code class="cpp plain">&gt;</code></div>
<div class="line number43 index42 alt2"><code class="cpp plain">}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><img alt="" height="200" src="/images/gnuplot_ex1.png" width="400"/></p>
<h2>W6</h2>
<h3>ROC</h3>
<p>// https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China<br/>// 內政部國旗參考資料: https://www.moi.gov.tw/cp.aspx?n=10621<br/>// cc roc_flag_in_gd.c -lgd -lm to link with gd and math library<br/>// https://www.rapidtables.com/web/color/RGB_Color.html<br/>// 幾何形狀著色與繪圖練習<br/>// 以下 gd 繪圖程式嘗試畫出 ROC 國旗, 請根據下列程式內容完成後續的國旗繪圖<br/>#include &lt;stdio.h&gt;<br/>#include &lt;gd.h&gt;<br/>#include &lt;math.h&gt;</p>
<p>void draw_roc_flag(gdImagePtr img);<br/>void draw_white_sun(gdImagePtr img, int x, int y, int size, int color);</p>
<p>int main() {<br/> // width 3: height 2<br/> int width = 1200;<br/> // 國旗長寬比為 3:2<br/> int height = (int)(width*2.0 / 3.0);</p>
<p>gdImagePtr img = gdImageCreateTrueColor(width, height);<br/> gdImageAlphaBlending(img, 0);</p>
<p>draw_roc_flag(img);</p>
<p>FILE *outputFile = fopen("./../images/roc_flag_in_gd.png", "wb");<br/> if (outputFile == NULL) {<br/> fprintf(stderr, "Error opening the output file.\n");<br/> return 1;<br/> }<br/> gdImagePngEx(img, outputFile, 9);<br/> fclose(outputFile);<br/> gdImageDestroy(img);<br/> return 0;<br/>}</p>
<p>void draw_roc_flag(gdImagePtr img) {<br/> int width = gdImageSX(img);<br/> int height = gdImageSY(img);<br/> int red, white, blue;<br/> // 白日位於青天面積正中央, 因此中心點座標為長寬各 1/4 處<br/> int center_x = (int)(width/4);<br/> int center_y = (int)(height/4);<br/> // gdImageFilledEllipse 需以長寬方向的 diameter 作圖<br/> // 由於中央白日圓形的半徑為青天寬度的 1/8<br/> // 因此中央白日圓形的直徑為青天寬度的 1/4, 也就是國旗寬度的 1/8<br/> // 而且白日十二道光芒的外圍圓形其半徑也是國旗寬度的1/8<br/> int sun_radius = (int)(width/8);<br/> // 中央白日圓形的直徑等於十二道光芒外圍圓形的半徑<br/> int white_circle_dia = sun_radius;<br/> // 中央藍色圓形半徑為中央白日的 1又 2/15<br/> int blue_circle_dia = white_circle_dia + white_circle_dia*2/15;<br/> // 根據 https://www.moi.gov.tw/cp.aspx?n=10621 訂定國旗三種顏色值<br/> red = gdImageColorAllocate(img, 255, 0, 0); // 紅色<br/> white = gdImageColorAllocate(img, 255, 255, 255); // 白色<br/> blue = gdImageColorAllocate(img, 0, 0, 149); // 藍色<br/> // 根據畫布大小塗上紅色長方形區域<br/> gdImageFilledRectangle(img, 0, 0, width, height, red);<br/> // 青天面積為整面國旗的 1/4, 也是採用長方形塗色<br/> gdImageFilledRectangle(img, 0, 0, (int)(width/2.0), (int)(height/2.0), blue);<br/> // 先設法以填色畫出六個白色堆疊菱形<br/> draw_white_sun(img, center_x, center_y, sun_radius, white);<br/> // 利用一個藍色大圓與白色小圓畫出藍色環狀<br/> gdImageFilledEllipse(img, center_x, center_y, blue_circle_dia, blue_circle_dia, blue);<br/> gdImageFilledEllipse(img, center_x, center_y, white_circle_dia, white_circle_dia, white);</p>
<p>}</p>
<p>void draw_white_sun(gdImagePtr img, int center_x, int center_y, int sun_radius, int color) {<br/> // M_PI 大小定義於 math.h 標頭檔中, 因為三角函數中採用徑度為角度單位<br/> // 因此定義將角度轉為徑度的轉換變數為 deg, 角度值乘上 deg 就可轉為徑度<br/> float deg = M_PI/180;<br/> // 根據十二道光芒的每一尖角的角度為 15 度, 求出其對應直角三角形的另一角度為 75 度<br/> // 求出十二道光芒中任一菱形的 small radius, 也就是菱形的另一個對應小圓的半徑大小<br/> float sr = sun_radius/tan(75*deg);<br/> int ax, ay, bx, by, dx, dy, ex, ey;<br/> gdPoint points[4];<br/> /* 在塗上十二道光芒中的單一菱形區域之前, 先以座標點畫線測試是否正確<br/> ax = center_x;<br/> ay = center_y - sun_radius;<br/> bx = center_x - sun_radius*tan(15*deg);<br/> by = center_y;<br/> ex = center_x;<br/> ey = center_y + sun_radius;<br/> dx = center_x + sun_radius*tan(15*deg);<br/> dy = center_y;<br/> // AB<br/> gdImageLine(img, ax, ay, bx, by, color);<br/> // BE<br/> gdImageLine(img, bx, by, ex, ey, color);<br/> // ED<br/> gdImageLine(img, ex, ey, dx, dy, color);<br/> // DA<br/> gdImageLine(img, dx, dy, ax, ay, color);<br/> */<br/> ax = center_x;<br/> ay = center_y - sun_radius;<br/> bx = center_x - sun_radius*tan(15*deg);<br/> by = center_y;<br/> ex = center_x;<br/> ey = center_y + sun_radius;<br/> dx = center_x + sun_radius*tan(15*deg);<br/> dy = center_y;<br/> // 確定單一菱形區域的塗色正確後, 利用迴圈每次轉動 30 度, 總共轉六次即可塗上十二道光芒區域<br/> for (int i=1;i&lt;=6;i++){<br/> // A<br/> points[0].x = ax+sun_radius*sin(30*deg*i);<br/> points[0].y = ay+sun_radius-sun_radius*cos(30*deg*i);<br/> // B<br/> points[1].x = bx+sr-sr*cos(30*deg*i);<br/> points[1].y = by-sr*sin(30*deg*i);<br/> // E<br/> points[2].x = ex-sun_radius*sin(30*deg*i);<br/> points[2].y = ey-(sun_radius-sun_radius*cos(30*deg*i));<br/> // D<br/> points[3].x = dx-(sr-sr*cos(30*deg*i));<br/> points[3].y = dy+sr*sin(30*deg*i);<br/> // 對菱形區域範圍塗色<br/> gdImageFilledPolygon(img, points, 4, color);<br/> // 在菱形區域外圍畫線, 明確界定菱形範圍<br/> gdImagePolygon(img, points, 4, color);<br/> }<br/>}</p>
<p><img alt="" height="267" src="/images/roc_flag_in_gd.png" width="400"/></p>
<h3>USA</h3>
<p>#include &lt;stdio.h&gt;<br/>#include &lt;gd.h&gt;<br/>#include &lt;math.h&gt;</p>
<p>void draw_usa_flag(gdImagePtr img);<br/>void draw_star(gdImagePtr img, int x, int y, int size, int color, double rotation_angle);</p>
<p>int main() {<br/> int width = 800;<br/> int height = (int)(width / 1.9);</p>
<p>gdImagePtr img = gdImageCreateTrueColor(width, height);<br/> gdImageAlphaBlending(img, 0);</p>
<p>draw_usa_flag(img);</p>
<p>FILE *outputFile = fopen("./../images/usa_flag.png", "wb");<br/> if (outputFile == NULL) {<br/> fprintf(stderr, "打开输出文件时出错。\n");<br/> return 1;<br/> }</p>
<p>gdImagePngEx(img, outputFile, 9);<br/> fclose(outputFile);<br/> gdImageDestroy(img);</p>
<p>return 0;<br/>}</p>
<p>void draw_usa_flag(gdImagePtr img) {<br/> int width = gdImageSX(img);<br/> int height = gdImageSY(img);<br/> int red, white, blue;<br/> // 国旗颜色<br/> red = gdImageColorAllocate(img, 178, 34, 52); // 红色条纹<br/> white = gdImageColorAllocate(img, 255, 255, 255); // 白色条纹<br/> blue = gdImageColorAllocate(img, 60, 59, 110); // 蓝色矩形</p>
<p>int stripe_height = height / 13;<br/> int stripe_width = width;<br/> int star_size = (int)(0.0308 * height); // 星星大小</p>
<p>for (int y = 0; y &lt; height; y += stripe_height) {<br/> if (y / stripe_height % 2 == 0) {<br/> gdImageFilledRectangle(img, 0, y, stripe_width, y + stripe_height, red);<br/> } else {<br/> gdImageFilledRectangle(img, 0, y, stripe_width, y + stripe_height, white);<br/> }<br/> }</p>
<p>gdImageFilledRectangle(img, 0, 0, width * 2 / 5, stripe_height * 7, blue);</p>
<p>int star_spacing_x = (int)(0.129 * height); // 横向星星之间的间距<br/> int star_spacing_y = (int)(0.054 * height); // 纵向星星之间的间距<br/> int star_start_x = (int)(0.125 * height); // 星星的起始X位置<br/> int star_start_y = (int)(0.0485 * height); // 星星的起始Y位置</p>
<p>for (int row = 0; row &lt; 9; row++) {<br/> int starsPerRow = (row % 2 == 0) ? 6 : 5;</p>
<p>// 计算2、4、6和8排星星的偏移量<br/> int offset_x = (row % 2 == 0) ? star_spacing_x / -2 : 0;</p>
<p>for (int star = 0; star &lt; starsPerRow; star++) {<br/> int x = star_start_x + star * star_spacing_x + offset_x;</p>
<p>// 旋转角度（以弧度为单位）<br/> double rotation_angle = M_PI / 5; // 忘記多少度的旋转</p>
<p>int y = star_start_y + row * star_spacing_y;<br/> draw_star(img, x, y, star_size, white, rotation_angle);<br/> }<br/> }<br/>}</p>
<p>void draw_star(gdImagePtr img, int x, int y, int size, int color, double rotation_angle) {<br/> gdPoint points[10];</p>
<p>for (int i = 0; i &lt; 10; i++) {<br/> double angle = M_PI / 2 + i * 2 * M_PI / 10 + rotation_angle;<br/> int radius = (i % 2 == 0) ? size : size / 2;<br/> points[i].x = x + radius * cos(angle);<br/> points[i].y = y + radius * sin(angle);<br/> }</p>
<p>// 用指定的颜色填充星星<br/> gdImageFilledPolygon(img, points, 10, color);<br/>}</p>
<p><img alt="" height="211" src="/images/usa_flag.png" width="400"/></p>
<h3>Japan</h3>
<p>#include &lt;stdio.h&gt;<br/>#include &lt;gd.h&gt;<br/>#include &lt;math.h&gt;</p>
<p>void draw_japan_flag(gdImagePtr img);<br/>void draw_red_sun(gdImagePtr img, int x, int y, int size, int color);</p>
<p>int main() {<br/> int originalWidth = 1200;<br/> int originalHeight = (int)(originalWidth * 2.0 / 3.0);<br/> gdImagePtr img = gdImageCreateTrueColor(originalWidth, originalHeight);<br/> gdImageAlphaBlending(img, 0);</p>
<p>draw_japan_flag(img);</p>
<p>// 新的宽度和高度以适应 "images" 文件夹<br/> int newWidth = 600;<br/> int newHeight = (int)(newWidth * 2.0 / 3.0);</p>
<p>// 创建新图像并进行缩放<br/> gdImagePtr resizedImage = gdImageCreateTrueColor(newWidth, newHeight);<br/> gdImageAlphaBlending(resizedImage, 0);<br/> gdImageCopyResampled(resizedImage, img, 0, 0, 0, 0, newWidth, newHeight, originalWidth, originalHeight);</p>
<p>FILE *outputFile = fopen("./../images/japan_flag.png", "wb");<br/> if (outputFile == NULL) {<br/> fprintf(stderr, "Error opening the output file.\n");<br/> return 1;<br/> }<br/> gdImagePng(resizedImage, outputFile);<br/> fclose(outputFile);<br/> gdImageDestroy(img);<br/> gdImageDestroy(resizedImage);</p>
<p>return 0;<br/>}</p>
<p>void draw_japan_flag(gdImagePtr img) {<br/> int width = gdImageSX(img);<br/> int height = gdImageSY(img);</p>
<p>// 创建一个白色背景<br/> int white = gdImageColorAllocate(img, 255, 255, 255);<br/> gdImageFilledRectangle(img, 0, 0, width - 1, height - 1, white);</p>
<p>// 绘制红色圆圈（太阳）<br/> int red = gdImageColorAllocate(img, 255, 0, 0);<br/> int center_x = width / 2;<br/> int center_y = height / 2;<br/> int radius = (int)((width * 2) / 3);<br/> draw_red_sun(img, center_x, center_y, radius, red);<br/>}</p>
<p>void draw_red_sun(gdImagePtr img, int x, int y, int size, int color) {<br/> // 減小 size 的值,例如將他的值減半<br/> size = size / 2;<br/> gdImageArc(img, x, y, size, size, 0, 360, color);<br/> gdImageFillToBorder(img, x, y, color, color);<br/>}</p>
<p><img alt="" height="267" src="/images/japan_flag.png" width="400"/></p>
<h3>PROC</h3>
<p>#include &lt;stdio.h&gt;<br/>#include &lt;gd.h&gt;<br/>#include &lt;math.h&gt;</p>
<p>void draw_chinese_flag(gdImagePtr img);</p>
<p>int main() {<br/> int width = 300; // 國旗寬度<br/> int height = 200; // 國旗高度</p>
<p>gdImagePtr im = gdImageCreateTrueColor(width, height);<br/> gdImageAlphaBlending(im, 0);</p>
<p>draw_chinese_flag(im);</p>
<p>FILE *outputFile = fopen("./../images/proc_flag.png", "wb");<br/> if (outputFile == NULL) {<br/> fprintf(stderr, "打开输出文件时出错。\n");<br/> return 1;<br/> }</p>
<p>gdImagePngEx(im, outputFile, 9);<br/> fclose(outputFile);<br/> gdImageDestroy(im);</p>
<p>return 0;<br/>}</p>
<p>// 声明 draw_star 函数<br/>void draw_star(gdImagePtr img, int x, int y, int size, int color, double rotation_angle);</p>
<p>void draw_chinese_flag(gdImagePtr img) {<br/> int width = gdImageSX(img);<br/> int height = gdImageSY(img);<br/> int red, yellow;</p>
<p>// 國旗顏色<br/> red = gdImageColorAllocate(img, 255, 0, 0); // 紅色背景<br/> yellow = gdImageColorAllocate(img, 255, 255, 0); // 黃色星星</p>
<p>// 畫紅色背景<br/> gdImageFilledRectangle(img, 0, 0, width, height, red);</p>
<p>// 設置星星的大小和位置<br/> int star_size = (int)(0.28 * height);<br/> int star_x = (int)(0.165 * width);<br/> int star_y = (int)(0.265 * height);</p>
<p>// 畫大星星<br/> draw_star(img, star_x, star_y, star_size, yellow, 11.0);</p>
<p>// 繪製小星星，位置根據實際國旗比例計算<br/> double radius = 0.15 * height;<br/> double angle = 360 / 7 * M_PI / 179.0;<br/> double rotation = -M_PI / 7.5;<br/> int cx = (int)(0.32 * width);<br/> int cy = (int)(0.27 * height);</p>
<p>for (int i = -1; i &lt; 3; i++) {<br/> int x = (int)(cx + radius * cos(i * angle + rotation));<br/> int y = (int)(cy + radius * sin(i * angle + rotation));<br/> draw_star(img, x, y, 19, yellow, M_PI / 5.0);<br/> }<br/>}</p>
<p>void draw_star(gdImagePtr img, int x, int y, int size, int color, double rotation_angle) {<br/> gdPoint points[10];</p>
<p>// 计算星形的五个外点和五个内点<br/> double outer_radius = size / 2;<br/> double inner_radius = size / 6;<br/> double angle = M_PI / 5.0;</p>
<p>for (int i = 0; i &lt; 10; i++) {<br/> double radius = (i % 2 == 0) ? outer_radius : inner_radius;<br/> double theta = rotation_angle + i * angle;<br/> points[i].x = x + radius * cos(theta);<br/> points[i].y = y + radius * sin(theta);<br/> }</p>
<p>// 使用 gdImageFilledPolygon 绘制星形<br/> gdImageFilledPolygon(img, points, 10, color);<br/>}</p>
<p><img alt="" height="267" src="/images/proc_flag.png" width="400"/></p>
<h3>Uk</h3>
<p>#include &lt;stdio.h&gt;<br/>#include &lt;gd.h&gt;<br/>#include &lt;math.h&gt;</p>
<p>void draw_uk_flag(gdImagePtr img);<br/>void fillTriangle(gdImagePtr img, int x1, int y1, int x2, int y2, int x3, int y3, int color);</p>
<p>int main() {<br/>// 设置国旗的宽和高<br/>int width = 1200;<br/>int height = width / 2;</p>
<p>// 创建图像<br/>gdImagePtr img = gdImageCreateTrueColor(width, height);<br/>gdImageAlphaBlending(img, 0);</p>
<p>// 绘制英国国旗<br/>draw_uk_flag(img);</p>
<p>// 将图像保存到文件<br/>FILE *outputFile = fopen("./../images/uk_flag.png", "wb");<br/>if (outputFile == NULL) {<br/>fprintf(stderr, "打开输出文件时发生错误。\n");<br/>return 1;<br/>}<br/>gdImagePngEx(img, outputFile, 9);<br/>fclose(outputFile);<br/>gdImageDestroy(img);<br/>return 0;<br/>}</p>
<p></p>
<p>void draw_uk_flag(gdImagePtr img) {<br/>int width = gdImageSX(img);<br/>int height = gdImageSY(img);</p>
<p>int red, white, blue;<br/>red = gdImageColorAllocate(img, 204, 0, 0); // 红色<br/>white = gdImageColorAllocate(img, 255, 255, 255); // 白色<br/>blue = gdImageColorAllocate(img, 0, 0, 153); // 蓝色</p>
<p>gdImageFilledRectangle(img, 0, 0, width, height, blue);</p>
<p><br/>int x1, y1, x2, y2, x3, y3;<br/>{<br/>int line_thickness = 100;<br/>gdImageSetThickness(img, line_thickness);</p>
<p>int x1, y1, x2, y2, x3, y3;</p>
<p>// 绘制白色斜线<br/>x1 = 0;<br/>y1 = 600;<br/>x2 = 1200;<br/>y2 = 0;<br/>gdImageLine(img, x1, y1, x2, y2, white);</p>
<p>x1 = 0;<br/>y1 = 0;<br/>x2 = 1200;<br/>y2 = 600;<br/>gdImageLine(img, x1, y1, x2, y2, white);<br/>}<br/>{<br/>int line_thickness = 33;<br/>gdImageSetThickness(img, line_thickness);</p>
<p><br/>// 绘制红色斜线<br/>x1 = 566;<br/>y1 = 300;<br/>x2 = 1166;<br/>y2 = 0;<br/>gdImageLine(img, x1, y1, x2, y2, red);</p>
<p>x1 = 1233;<br/>y1 = 600;<br/>x2 = 633;<br/>y2 = 300;<br/>gdImageLine(img, x1, y1, x2, y2, red);</p>
<p>x1 = 566;<br/>y1 = 300;<br/>x2 = -33;<br/>y2 = 0;<br/>gdImageLine(img, x1, y1, x2, y2, red);</p>
<p>x1 = 600;<br/>y1 = 316.5;<br/>x2 = 0;<br/>y2 = 616.5;<br/>gdImageLine(img, x1, y1, x2, y2, red);<br/>}<br/>{<br/>int line_thickness = 33;<br/>gdImageSetThickness(img, line_thickness);</p>
<p>int x1, y1, x2, y2, x3, y3;</p>
<p>// 绘制 斜线<br/>x1 = 0;<br/>y1 = 600;<br/>x2 = 1200;<br/>y2 = 0;<br/>gdImageLine(img, x1, y1, x2, y2, red );</p>
<p><br/>x1 = 1200;<br/>y1 = 16.5;<br/>x2 = 600;<br/>y2 = 316.5;<br/>gdImageLine(img, x1, y1, x2, y2, white);</p>
<p><br/>x1 = 0;<br/>y1 = 583.5;<br/>x2 = 600;<br/>y2 = 283.5;<br/>gdImageLine(img, x1, y1, x2, y2, white);</p>
<p><br/>}</p>
<p>// 绘制白色十字<br/>int cross_width = width / 32;<br/>int cross_arm_width = width / 32;<br/>int center_x = width / 2;<br/>int center_y = height / 2;</p>
<p>gdImageFilledRectangle(img, center_x + 2.7 * cross_width, 0, center_x - 2.7 * cross_width, height, white);<br/>gdImageFilledRectangle(img, 0, center_y + 2.7 * cross_arm_width, width, center_y - 2.7 * cross_arm_width, white);</p>
<p>// 绘制红色十字<br/>gdImageFilledRectangle(img, center_x + 1.5 * cross_width, 0, center_x - 1.5 * cross_width, height, red);<br/>gdImageFilledRectangle(img, 0, center_y + 1.5 * cross_arm_width, width, center_y - 1.5 * cross_arm_width, red);<br/>}</p>
<p><img alt="" height="200" src="/images/uk_flag.png" width="400"/></p>
<h3>Korea</h3>
<p>#include &lt;stdio.h&gt;<br/>#include &lt;gd.h&gt;<br/>#include &lt;math.h&gt;</p>
<p>#define WIDTH 900<br/>#define HEIGHT 600<br/>#define FILENAME "south_korea_flag.png"</p>
<p>int main() {<br/> gdImagePtr im;<br/> FILE *pngout;<br/> int white, black, red, blue;</p>
<p>im = gdImageCreate(WIDTH, HEIGHT);</p>
<p>white = gdImageColorAllocate(im, 255, 255, 255);<br/> black = gdImageColorAllocate(im, 0, 0, 0);<br/> red = gdImageColorAllocate(im, 205, 0, 0);<br/> blue = gdImageColorAllocate(im, 0, 56, 168);</p>
<p>// Background (white)<br/> gdImageFilledRectangle(im, 0, 0, WIDTH, HEIGHT , white);</p>
<p>// Blue Circle (Yin-Yang Symbol)<br/> gdImageFilledArc(im, WIDTH / 2, HEIGHT / 2, WIDTH / 3, HEIGHT / 2, 210, 30, red, gdArc);</p>
<p>// Red Circle (Yin-Yang Symbol)<br/> gdImageFilledArc(im, WIDTH / 2, HEIGHT / 2, WIDTH / 3, HEIGHT / 2, 30, 210, blue, gdArc);</p>
<p>int circleX = 385; // 圓心的 X 座標<br/> int circleY = 262.5; // 圓心的 Y 座標<br/> int circleRadius = 75;</p>
<p>// 繪製圓形<br/> gdImageFilledEllipse(im, circleX, circleY, circleRadius * 2, circleRadius * 2, red);</p>
<p>int circleX2 = 515; // 圓心的 X 座標</p>
<p>int circleY2 = 337.5;</p>
<p>// 繪製圓形<br/> gdImageFilledEllipse(im, circleX2, circleY2, circleRadius * 2, circleRadius * 2, blue);</p>
<p>{</p>
<p><br/> // 起點和終點位置</p>
<p>int startX = 340; <br/> // 線的起點 X 座標</p>
<p>int startY = 90; <br/> // 線的起點 Y 座標</p>
<p>int endX = 200; <br/> // 線的終點 X 座標</p>
<p>int endY = 260; <br/> // 線的終點 Y 座標</p>
<p>int lineWidth = 23; // 線的寬度</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth);<br/> gdImageLine(im, startX, startY, endX, endY, black);<br/> // 繪製線段<br/> gdImageSetThickness(im, lineWidth);<br/> gdImageLine(im, startX -35, startY -10, endX -35, endY -10, black);</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth);<br/> gdImageLine(im, startX -70, startY -20, endX -70, endY -20, black);</p>
<p>int startX2 = 213; <br/> // 線的起點 X 座標</p>
<p>int startY2 = 270; <br/> // 線的起點 Y 座標</p>
<p>int endX2 = 133; <br/> // 線的終點 X 座標</p>
<p>int endY2 = 210; <br/> // 線的終點 Y 座標</p>
<p>int lineWidth2 = 25; // 線的寬度</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth);<br/> gdImageLine(im, startX2 +3, startY2, endX2 +3, endY2, white);</p>
<p>gdImageSetThickness(im, lineWidth +10);<br/>gdImageLine(im, startX2 -17, startY2 +9 , endX2 -17, endY2 +9 , white);</p>
<p>gdImageSetThickness(im, lineWidth );<br/>gdImageLine(im, startX2 +115, startY2 -145, endX2 +115, endY2 -145, white);</p>
<p>gdImageSetThickness(im, lineWidth);<br/>gdImageLine(im, startX2 +120, startY2 -155, endX2 +120, endY2 -155, white);</p>
<p>gdImageSetThickness(im, lineWidth +12);<br/>gdImageLine(im, startX2 +145, startY2 -155, endX2 +145, endY2 -155, white);<br/>}<br/> {<br/> // 起點和終點位置</p>
<p>int startX = 330; <br/> // 線的起點 X 座標</p>
<p>int startY = 520; <br/> // 線的起點 Y 座標</p>
<p>int endX = 190; <br/> // 線的終點 X 座標</p>
<p>int endY = 350; <br/> // 線的終點 Y 座標</p>
<p>int lineWidth = 23; // 線的寬度</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth);<br/> gdImageLine(im, startX, startY, endX, endY, black);<br/> // 繪製線段<br/> gdImageSetThickness(im, lineWidth);<br/> gdImageLine(im, startX -35, startY +10, endX -35, endY +10, black);</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth);<br/> gdImageLine(im, startX -70, startY +20, endX -70, endY +20, black);</p>
<p>int startX2 = 213; <br/> // 線的起點 X 座標</p>
<p>int startY2 = 330; <br/> // 線的起點 Y 座標</p>
<p>int endX2 = 133; <br/> // 線的終點 X 座標</p>
<p>int endY2 = 390; <br/> // 線的終點 Y 座標</p>
<p>int lineWidth2 = 25; // 線的寬度</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth +8);<br/> gdImageLine(im, startX2 -11, startY2, endX2 -11, endY2, white);</p>
<p>gdImageSetThickness(im, lineWidth +10);<br/>gdImageLine(im, startX2 -30, startY2 -9 , endX2 -30, endY2 -9 , white);</p>
<p>gdImageSetThickness(im, lineWidth );<br/>gdImageLine(im, startX2 +100, startY2 +150, endX2 +100, endY2 +150, white);</p>
<p>gdImageSetThickness(im, lineWidth);<br/>gdImageLine(im, startX2 +120, startY2 +155, endX2 +120, endY2 +155, white);</p>
<p>gdImageSetThickness(im, lineWidth +14);<br/>gdImageLine(im, startX2 +145, startY2 +157, endX2 +145, endY2 +157, white);</p>
<p>gdImageSetThickness(im, lineWidth -10);<br/>gdImageLine(im, 232, 426, 206, 448, white);</p>
<p>}</p>
<p>{<br/> // 起點和終點位置</p>
<p>int startX = 564; <br/> // 線的起點 X 座標</p>
<p>int startY = 520; <br/> // 線的起點 Y 座標</p>
<p>int endX = 704; <br/> // 線的終點 X 座標</p>
<p>int endY = 350; <br/> // 線的終點 Y 座標</p>
<p>int lineWidth = 23; // 線的寬度</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth);<br/> gdImageLine(im, startX +70, startY +20, endX +70, endY +20, black);</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth);<br/> gdImageLine(im, startX, startY, endX, endY, black);</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth);<br/> gdImageLine(im, startX +35, startY +10, endX +35, endY +10, black);</p>
<p>gdImageSetThickness(im, lineWidth -10);<br/>gdImageLine(im, 624, 400, 734, 490, white);</p>
<p>int startX2 = 553; <br/> // 線的起點 X 座標</p>
<p>int startY2 = 330; <br/> // 線的起點 Y 座標</p>
<p>int endX2 = 633; <br/> // 線的終點 X 座標</p>
<p>int endY2 = 390; <br/> // 線的終點 Y 座標</p>
<p>int lineWidth2 = 25; // 線的寬度</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth +8);<br/> gdImageLine(im, startX2 +139, startY2, endX2 +139, endY2, white);</p>
<p>gdImageSetThickness(im, lineWidth +10);<br/>gdImageLine(im, startX2 +157, startY2 -9 , endX2 +157, endY2 -9 , white);</p>
<p>gdImageSetThickness(im, lineWidth);<br/>gdImageLine(im, startX2 +25, startY2 +155, endX2 +25, endY2 +155, white);</p>
<p>gdImageSetThickness(im, lineWidth +30);<br/>gdImageLine(im, startX2 -3, startY2 +170, endX2 , endY2 +170, white);<br/> }<br/> {<br/> // 起點和終點位置</p>
<p>int startX = 330; <br/> // 線的起點 X 座標</p>
<p>int startY = 520; <br/> // 線的起點 Y 座標</p>
<p>int endX = 190; <br/> // 線的終點 X 座標</p>
<p>int endY = 350; <br/> // 線的終點 Y 座標</p>
<p>int lineWidth = 23; // 線的寬度</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth);<br/> gdImageLine(im, startX, startY, endX, endY, black);<br/> // 繪製線段<br/> gdImageSetThickness(im, lineWidth);<br/> gdImageLine(im, startX -35, startY +10, endX -35, endY +10, black);</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth);<br/> gdImageLine(im, startX -70, startY +20, endX -70, endY +20, black);</p>
<p>int startX2 = 213; <br/> // 線的起點 X 座標</p>
<p>int startY2 = 330; <br/> // 線的起點 Y 座標</p>
<p>int endX2 = 133; <br/> // 線的終點 X 座標</p>
<p>int endY2 = 390; <br/> // 線的終點 Y 座標</p>
<p>int lineWidth2 = 25; // 線的寬度</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth +8);<br/> gdImageLine(im, startX2 -11, startY2, endX2 -11, endY2, white);</p>
<p>gdImageSetThickness(im, lineWidth +10);<br/>gdImageLine(im, startX2 -30, startY2 -9 , endX2 -30, endY2 -9 , white);</p>
<p>gdImageSetThickness(im, lineWidth );<br/>gdImageLine(im, startX2 +100, startY2 +150, endX2 +100, endY2 +150, white);</p>
<p>gdImageSetThickness(im, lineWidth);<br/>gdImageLine(im, startX2 +120, startY2 +155, endX2 +120, endY2 +155, white);</p>
<p>gdImageSetThickness(im, lineWidth +14);<br/>gdImageLine(im, startX2 +145, startY2 +157, endX2 +145, endY2 +157, white);</p>
<p>gdImageSetThickness(im, lineWidth -10);<br/>gdImageLine(im, 232, 426, 206, 448, white);</p>
<p>}<br/> {<br/> // 起點和終點位置</p>
<p>int startX = 564; <br/> // 線的起點 X 座標</p>
<p>int startY = 97; <br/> // 線的起點 Y 座標</p>
<p>int endX = 704; <br/> // 線的終點 X 座標</p>
<p>int endY = 267; <br/> // 線的終點 Y 座標</p>
<p>int lineWidth = 23; // 線的寬度</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth);<br/> gdImageLine(im, startX +70, startY -20, endX +70, endY -20, black);</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth);<br/> gdImageLine(im, startX, startY, endX, endY, black);</p>
<p>gdImageSetThickness(im, lineWidth -10);<br/>gdImageLine(im, 624, 212, 734, 118, white);</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth);<br/> gdImageLine(im, startX +35, startY -10, endX +35, endY -10, black);</p>
<p>int startX2 = 553; <br/> // 線的起點 X 座標</p>
<p>int startY2 = 277; <br/> // 線的起點 Y 座標</p>
<p>int endX2 = 633; <br/> // 線的終點 X 座標</p>
<p>int endY2 = 217; <br/> // 線的終點 Y 座標</p>
<p>int lineWidth2 = 25; // 線的寬度</p>
<p>// 繪製線段<br/> gdImageSetThickness(im, lineWidth +8);<br/> gdImageLine(im, startX2 +134, startY2, endX2 +134, endY2, white);</p>
<p>gdImageSetThickness(im, lineWidth +10);<br/>gdImageLine(im, startX2 +157, startY2 +9 , endX2 +157, endY2 +9 , white);</p>
<p>gdImageSetThickness(im, lineWidth);<br/>gdImageLine(im, startX2 +25, startY2 -155, endX2 +25, endY2 -155, white);</p>
<p>gdImageSetThickness(im, lineWidth +30);<br/>gdImageLine(im, startX2 -5, startY2 -155, endX2 -5, endY2 -155, white);</p>
<p>}</p>
<p>// Save image<br/>FILE *outputFile = fopen("./../images/korea_flag.png", "wb");<br/>if (outputFile == NULL) {<br/> fprintf(stderr, "Error opening the output file.\n");<br/> return 1;<br/>}<br/> gdImagePngEx(im, outputFile, 9);<br/> fclose(outputFile);<br/> gdImageDestroy(im);<br/> return 0;<br/> }</p>
<p><img alt="" height="267" src="/images/korea_flag.png" width="400"/></p>
<h2>W7</h2>
<p>Map: site map 網站所有頁面</p>
<p>EditA: edit all pages, 使用時機為(1)解決多人共用網站時的衝突, 或(2)刪除特定頁面</p>
<p>Edit: edit one page, 先選頁面, 再選 Edit 然後才能進入編輯模式</p>
<p>Config: 編輯網站標題, 若要編輯 site title, 必須更改 init.py 中的 site_title 字串內容</p>
<p>Search: 頁面資料 html 原始碼內容搜尋</p>
<p>IUpload: image upload, 影像檔案上傳, 資料會放入 images 目錄中</p>
<p>IList: image file list, 列出存在 images 目錄下的影像檔案</p>
<p>FUpload: file upload, 一般檔案上傳功能, 資料會放入 downloads 目錄中</p>
<p>FList: file list, 列出位於 downloads 目錄下的檔案</p>
<p>Logout: 登出</p>
<p>Convert: 將 config/content.htm 經過分頁程式處理後, 轉為 content 目錄下的超文件</p>
<h2>W10</h2>
<p>線上簡報、網誌與多媒體影片製作工具:</p>
<p><a href="https://leo-editor.github.io/leo-editor/">Leo Editor</a><span> </span>(<a href="https://groups.google.com/g/leo-editor">討論群組</a>) 為大綱管理系統, 可以當作程式開發的 IDE (Integrated Development Environment) 使用, 可用來編輯 reveal.js 簡報檔案中的 html 與 markdown, 也可用來編輯 Pelican 網誌 markdown 與轉檔, 並且在電腦輔助設計與分析過程中, 可以用來解讀 CoppeliaSim XML 格式檔案.</p>
<p>因為 Python 3.12.0 環境下 Leo Editor 還無法正常透過 pip 安裝, 因此必須手動安裝 PyQt5 之後, 再使用 pip install leo, 所完成的 Python 3.12.0: <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EYf6RiAqXAFJllAizi_-iZ4BT9ZEn8-bT2V8TVjd9p446Q?e=NSCciC">Python312_leo_664_PyQt5.7z</a><span> </span>(需要下載密碼)</p>
<p><a href="https://www.debugmode.com/wink.html">Wink</a><span> </span>為操作流程影片製作套件, 可以在電腦操作過程, 儲存關鍵頁面與滑鼠點擊區域後, 加上輔助文字說明後製作成 mp4 影片檔.</p>
<p><a href="https://github.com/ShareX/ShareX/releases">ShareX</a><span> </span>為螢幕畫面取像或錄影套件, 可以擷取電腦畫面任一區域存為影像檔, 或者結合語音說明與滑鼠操作錄製說明影片.</p>
<p><a href="https://github.com/obsproject/obs-studio/releases">OBS</a><span> </span>為電腦廣播製作系統, 可以結合各種語音、圖像與影片製作出多元的電腦操作說明影片.</p>
<p>Wink 與 ShareX 都需要<span> </span><a href="https://ffmpeg.org/download.html#build-windows">ffmpeq.exe</a>.</p>
<h2>W12</h2>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_867152">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp spaces"> </code><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="cpp preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number4 index3 alt1"><code class="cpp spaces">  </code> </div>
<div class="line number5 index4 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number6 index5 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">width = 800;</code></div>
<div class="line number7 index6 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">height = 600;</code></div>
<div class="line number8 index7 alt1"><code class="cpp spaces">  </code> </div>
<div class="line number9 index8 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePtr img = gdImageCreateTrueColor(width, height);</code></div>
<div class="line number10 index9 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageAlphaBlending(img, 0);</code></div>
<div class="line number11 index10 alt2"><code class="cpp spaces">  </code> </div>
<div class="line number12 index11 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*outputFile = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"hellogd.png"</code><code class="cpp plain">, </code><code class="cpp string">"wb"</code><code class="cpp plain">);</code></div>
<div class="line number13 index12 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(outputFile == NULL) {</code></div>
<div class="line number14 index13 alt1"><code class="cpp spaces">  </code> </div>
<div class="line number15 index14 alt2"><code class="cpp functions bold">fprintf</code><code class="cpp plain">(stderr, </code><code class="cpp string">"Error opening the output file.\n"</code><code class="cpp plain">);</code></div>
<div class="line number16 index15 alt1"><code class="cpp spaces">  </code> </div>
<div class="line number17 index16 alt2"><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number19 index18 alt2"><code class="cpp spaces">     </code> </div>
<div class="line number20 index19 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">red = gdImageColorAllocate(img, 255, 0, 0);</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">blue = gdImageColorAllocate(img, 0, 0, 255);</code></div>
<div class="line number22 index21 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">black = gdImageColorAllocate(img, 0, 0, 0);</code></div>
<div class="line number23 index22 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">white = gdImageColorAllocate(img, 255, 255, 255);</code></div>
<div class="line number24 index23 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 長方形塗色</code></div>
<div class="line number25 index24 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(img, 0, 0, width, height, white);</code></div>
<div class="line number26 index25 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(img, 0, 0, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width/4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height/4, blue);</code></div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 橢圓形塗色</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledEllipse(img, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width*3/4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height/4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width/4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width/4, red);</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 橢圓形畫線</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageEllipse(img, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width*3/4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height*3/4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width/4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width/4, red);</code></div>
<div class="line number31 index30 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 畫直線</code></div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageLine(img, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width/2, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height/2, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width/2, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height/2 + 100, blue);</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">     </code> </div>
<div class="line number34 index33 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 多邊形畫線</code></div>
<div class="line number35 index34 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdPoint points[4];</code></div>
<div class="line number36 index35 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[0].x = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width/4;</code></div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[0].y = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height*3/4;</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[1].x = points[0].x + 100;</code></div>
<div class="line number39 index38 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[1].y = points[0].y;</code></div>
<div class="line number40 index39 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[2].x = points[1].x;</code></div>
<div class="line number41 index40 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[2].y = points[1].y + 100;</code></div>
<div class="line number42 index41 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[3].x = points[2].x - 100;</code></div>
<div class="line number43 index42 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[3].y = points[2].y;</code></div>
<div class="line number44 index43 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePolygon(img, points, 4, black);</code></div>
<div class="line number45 index44 alt2"><code class="cpp spaces">     </code> </div>
<div class="line number46 index45 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 多邊形塗色</code></div>
<div class="line number47 index46 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdPoint points2[4];</code></div>
<div class="line number48 index47 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points2[0].x = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width/3;</code></div>
<div class="line number49 index48 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points2[0].y = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height/2;</code></div>
<div class="line number50 index49 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points2[1].x = points2[0].x + 100;</code></div>
<div class="line number51 index50 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points2[1].y = points2[0].y;</code></div>
<div class="line number52 index51 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points2[2].x = points2[1].x;</code></div>
<div class="line number53 index52 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points2[2].y = points2[1].y + 100;</code></div>
<div class="line number54 index53 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points2[3].x = points2[2].x - 150;</code></div>
<div class="line number55 index54 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points2[3].y = points2[2].y;</code></div>
<div class="line number56 index55 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledPolygon(img, points2, 4, red);</code></div>
<div class="line number57 index56 alt2"><code class="cpp spaces">  </code> </div>
<div class="line number58 index57 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePngEx(img, outputFile, 9);</code></div>
<div class="line number59 index58 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(outputFile);</code></div>
<div class="line number60 index59 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageDestroy(img);</code></div>
<div class="line number61 index60 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number62 index61 alt1"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><img alt="" height="300" src="https://41223146.github.io/cp2023/images/hellogd.png" width="400"/></p>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_356177">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="cpp preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="cpp comments">// Declare the rotation function</code></div>
<div class="line number6 index5 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">rotateFilledPolygon(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">x_orig, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">y_orig, </code><code class="cpp color1 bold">double</code> <code class="cpp plain">rotation_ang, gdPoint *points, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">num_points) {</code></div>
<div class="line number7 index6 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i;</code></div>
<div class="line number8 index7 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">angle_rad = rotation_ang * M_PI / 180.0;</code></div>
<div class="line number9 index8 alt2"> </div>
<div class="line number10 index9 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(i = 0; i &lt; num_points; i++) {</code></div>
<div class="line number11 index10 alt2"><code class="cpp spaces">        </code><code class="cpp color1 bold">int</code> <code class="cpp plain">x = points[i].x - x_orig;</code></div>
<div class="line number12 index11 alt1"><code class="cpp spaces">        </code><code class="cpp color1 bold">int</code> <code class="cpp plain">y = points[i].y - y_orig;</code></div>
<div class="line number13 index12 alt2"> </div>
<div class="line number14 index13 alt1"><code class="cpp spaces">        </code><code class="cpp plain">points[i].x = x_orig + (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(x * </code><code class="cpp functions bold">cos</code><code class="cpp plain">(angle_rad) - y * </code><code class="cpp functions bold">sin</code><code class="cpp plain">(angle_rad));</code></div>
<div class="line number15 index14 alt2"><code class="cpp spaces">        </code><code class="cpp plain">points[i].y = y_orig + (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(x * </code><code class="cpp functions bold">sin</code><code class="cpp plain">(angle_rad) + y * </code><code class="cpp functions bold">cos</code><code class="cpp plain">(angle_rad));</code></div>
<div class="line number16 index15 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number17 index16 alt2"><code class="cpp plain">}</code></div>
<div class="line number18 index17 alt1"> </div>
<div class="line number19 index18 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number20 index19 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">width = 800;</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">height = 600;</code></div>
<div class="line number22 index21 alt1"> </div>
<div class="line number23 index22 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePtr img = gdImageCreateTrueColor(width, height);</code></div>
<div class="line number24 index23 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageAlphaBlending(img, 0);</code></div>
<div class="line number25 index24 alt2"> </div>
<div class="line number26 index25 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*outputFile = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"./../images/hellogd2.png"</code><code class="cpp plain">, </code><code class="cpp string">"wb"</code><code class="cpp plain">);</code></div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(outputFile == NULL) {</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(stderr, </code><code class="cpp string">"Error opening the output file.\n"</code><code class="cpp plain">);</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number31 index30 alt2"> </div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">red = gdImageColorAllocate(img, 255, 0, 0);</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">blue = gdImageColorAllocate(img, 0, 0, 255);</code></div>
<div class="line number34 index33 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">black = gdImageColorAllocate(img, 0, 0, 0);</code></div>
<div class="line number35 index34 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">white = gdImageColorAllocate(img, 255, 255, 255);</code></div>
<div class="line number36 index35 alt1"> </div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(img, 0, 0, width, height, white);</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(img, 0, 0, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height / 4, blue);</code></div>
<div class="line number39 index38 alt2"> </div>
<div class="line number40 index39 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledEllipse(img, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width * 3 / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4, red);</code></div>
<div class="line number41 index40 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageEllipse(img, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width * 3 / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height * 3 / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4, red);</code></div>
<div class="line number42 index41 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageLine(img, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 2, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height / 2, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 2, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height / 2 + 100, blue);</code></div>
<div class="line number43 index42 alt2"> </div>
<div class="line number44 index43 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdPoint points[4];</code></div>
<div class="line number45 index44 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[0].x = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4;</code></div>
<div class="line number46 index45 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[0].y = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height * 3 / 4;</code></div>
<div class="line number47 index46 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[1].x = points[0].x + 100;</code></div>
<div class="line number48 index47 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[1].y = points[0].y;</code></div>
<div class="line number49 index48 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[2].x = points[1].x;</code></div>
<div class="line number50 index49 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[2].y = points[1].y + 100;</code></div>
<div class="line number51 index50 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[3].x = points[2].x - 100;</code></div>
<div class="line number52 index51 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[3].y = points[2].y;</code></div>
<div class="line number53 index52 alt2"> </div>
<div class="line number54 index53 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Call the rotation function multiple times</code></div>
<div class="line number55 index54 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; 4; i++) {</code></div>
<div class="line number56 index55 alt1"><code class="cpp spaces">        </code><code class="cpp plain">rotateFilledPolygon((</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4 + 50, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height * 3 / 4 + 50, 30.0, points, 4);</code></div>
<div class="line number57 index56 alt2"><code class="cpp spaces">        </code><code class="cpp plain">gdImagePolygon(img, points, 4, black);</code></div>
<div class="line number58 index57 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number59 index58 alt2"> </div>
<div class="line number60 index59 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdPoint points2[4];</code></div>
<div class="line number61 index60 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points2[0].x = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 3;</code></div>
<div class="line number62 index61 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points2[0].y = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height / 2;</code></div>
<div class="line number63 index62 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points2[1].x = points2[0].x + 100;</code></div>
<div class="line number64 index63 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points2[1].y = points2[0].y;</code></div>
<div class="line number65 index64 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points2[2].x = points2[1].x;</code></div>
<div class="line number66 index65 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points2[2].y = points2[1].y + 100;</code></div>
<div class="line number67 index66 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points2[3].x = points2[2].x - 150;</code></div>
<div class="line number68 index67 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points2[3].y = points2[2].y;</code></div>
<div class="line number69 index68 alt2"> </div>
<div class="line number70 index69 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Call the rotation function multiple times</code></div>
<div class="line number71 index70 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; 12; i++) {</code></div>
<div class="line number72 index71 alt1"><code class="cpp spaces">        </code><code class="cpp comments">//rotateFilledPolygon((int)width / 3 + 50, (int)height / 2 + 50, 30.0, points2, 4);</code></div>
<div class="line number73 index72 alt2"><code class="cpp spaces">        </code><code class="cpp plain">rotateFilledPolygon(500, 200, 30.0, points2, 4);</code></div>
<div class="line number74 index73 alt1"><code class="cpp spaces">        </code><code class="cpp plain">gdImageFilledPolygon(img, points2, 4, red);</code></div>
<div class="line number75 index74 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number76 index75 alt1"> </div>
<div class="line number77 index76 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePngEx(img, outputFile, 9);</code></div>
<div class="line number78 index77 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(outputFile);</code></div>
<div class="line number79 index78 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageDestroy(img);</code></div>
<div class="line number80 index79 alt1"> </div>
<div class="line number81 index80 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number82 index81 alt1"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><img alt="" height="300" src="https://41223146.github.io/cp2023/images/hellogd2.png" width="400"/></p>
<p></p>
<h2>W13</h2>
<p>課程內容有點難理解，不懂的地方只能看老師的教學視頻，從開學目前學到印象最深的是利用C語言進行類似的國旗，類似的國旗得過程中常出現程序錯誤導致國旗的發生錯誤，有時看老師的影片也不知道到底解決了，之後我詢問班上的同學慢慢掌握寫作程序的技巧，最後的國旗也順利全部出來了。</p>
<p>接下來的小組合作中，我與同組成員分享想法，討論出各種不同的解決方案，我相信與小組成員互相討論定可以提高我和組員輸出寫C語言的能力。</p>
<p>電腦課程豐富了我的專業知識，期望接下來的課程可以學到更多的新知識，我期待將學到的技能運用到未來的科技上，並在課程設計上更進一步的成長進步。</p>
<p></p>
<div class="line number1 index0 alt2"></div>
<h1>各國國旗</h1>
<h2>Belgium</h2>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_448281">
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
 
#define WIDTH 600
#define HEIGHT 400
#define BLACK 0x000000  // Black color
#define YELLOW 0xFFD100 // Yellow color
#define RED 0xED2939    // Red color
 
void drawBelgiumFlag() {
    gdImagePtr im;
    FILE *output;
 
    im = gdImageCreateTrueColor(WIDTH, HEIGHT);
    output = fopen("belgium_flag.png", "wb");
 
    // Allocate black, yellow, and red colors
    int blackIndex = gdImageColorAllocate(im, (BLACK &gt;&gt; 16) &amp; 0xFF, (BLACK &gt;&gt; 8) &amp; 0xFF, BLACK &amp; 0xFF);
    int yellowIndex = gdImageColorAllocate(im, (YELLOW &gt;&gt; 16) &amp; 0xFF, (YELLOW &gt;&gt; 8) &amp; 0xFF, YELLOW &amp; 0xFF);
    int redIndex = gdImageColorAllocate(im, (RED &gt;&gt; 16) &amp; 0xFF, (RED &gt;&gt; 8) &amp; 0xFF, RED &amp; 0xFF);
 
    // Draw black left third
    gdImageFilledRectangle(im, 0, 0, WIDTH / 3 - 1, HEIGHT - 1, blackIndex);
 
    // Draw yellow middle third
    gdImageFilledRectangle(im, WIDTH / 3, 0, 2 * WIDTH / 3 - 1, HEIGHT - 1, yellowIndex);
 
    // Draw red right third
    gdImageFilledRectangle(im, 2 * WIDTH / 3, 0, WIDTH - 1, HEIGHT - 1, redIndex);
 
    // Save the image
    gdImagePng(im, output);
    fclose(output);
    gdImageDestroy(im);
}
 
int main() {
    drawBelgiumFlag();
    return 0;
}
</pre>
</div>
</div>
<p></p>
<div class="line number1 index0 alt2"><code class="cpp preprocessor"></code><code class="cpp plain"><img alt="" height="267" src="/images/belgium_flag.png" width="400"/></code></div>
<h2>Italian</h2>
<div class="line number1 index0 alt2"><code class="cpp plain">#include &lt;stdio.h&gt;<br/>#include &lt;gd.h&gt;<br/><br/>int main() {<br/> int width = 300; // 宽度<br/> int height = 200; // 高度<br/><br/> gdImagePtr image = gdImageCreateTrueColor(width, height);<br/><br/> if (image == NULL) {<br/> printf("Failed to create image.\n");<br/> return 1;<br/> }<br/><br/> // 确定颜色索引<br/> int green = gdImageColorAllocate(image, 0, 128, 0);<br/> int white = gdImageColorAllocate(image, 255, 255, 255);<br/> int red = gdImageColorAllocate(image, 255, 0, 0);<br/><br/> // 填充颜色<br/> gdImageFilledRectangle(image, 0, 0, width / 3, height, green);<br/> gdImageFilledRectangle(image, width / 3, 0, (width / 3) * 2, height, white);<br/> gdImageFilledRectangle(image, (width / 3) * 2, 0, width, height, red);<br/><br/> FILE *outputFile;<br/> outputFile = fopen("./../images/italian_flag.png", "wb");<br/><br/> if (outputFile == NULL) {<br/> printf("Failed to open file for writing.\n");<br/> return 1;<br/> }<br/><br/> gdImagePng(image, outputFile);<br/> fclose(outputFile);<br/><br/> gdImageDestroy(image);<br/><br/> return 0;<br/>}<br/></code></div>
<div class="line number40 index39 alt1">
<div>
<div class="syntaxhighlighter cpp" id="highlighter_796545">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp preprocessor"></code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<img alt="" height="267" src="/images/italian_flag.png" width="400"/></div>
<h2>Vietnam</h2>
<div class="line number40 index39 alt1">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="cpp preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="cpp preprocessor">#define WIDTH 600</code></div>
<div class="line number6 index5 alt1"><code class="cpp preprocessor">#define HEIGHT 400</code></div>
<div class="line number7 index6 alt2"><code class="cpp preprocessor">#define RED 0xDC143C  // Crimson color</code></div>
<div class="line number8 index7 alt1"><code class="cpp preprocessor">#define YELLOW 0xFFFF00</code></div>
<div class="line number9 index8 alt2"> </div>
<div class="line number10 index9 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">drawStar(gdImagePtr im, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">x, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">y, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">outerRadius, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">innerRadius, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">color) {</code></div>
<div class="line number11 index10 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">angle = -M_PI / 2.0;  </code><code class="cpp comments">// Starting angle for the star</code></div>
<div class="line number12 index11 alt1"> </div>
<div class="line number13 index12 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdPoint starPoints[10];</code></div>
<div class="line number14 index13 alt1"> </div>
<div class="line number15 index14 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; 10; i++) {</code></div>
<div class="line number16 index15 alt1"><code class="cpp spaces">        </code><code class="cpp color1 bold">int</code> <code class="cpp plain">radius = i % 2 == 0 ? outerRadius : innerRadius;</code></div>
<div class="line number17 index16 alt2"><code class="cpp spaces">        </code><code class="cpp plain">starPoints[i].x = x + radius * </code><code class="cpp functions bold">cos</code><code class="cpp plain">(angle);</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces">        </code><code class="cpp plain">starPoints[i].y = y + radius * </code><code class="cpp functions bold">sin</code><code class="cpp plain">(angle);</code></div>
<div class="line number19 index18 alt2"><code class="cpp spaces">        </code><code class="cpp plain">angle += M_PI / 5.0;  </code><code class="cpp comments">// Angle between two consecutive points</code></div>
<div class="line number20 index19 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number21 index20 alt2"> </div>
<div class="line number22 index21 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledPolygon(im, starPoints, 10, color);</code></div>
<div class="line number23 index22 alt2"><code class="cpp plain">}</code></div>
<div class="line number24 index23 alt1"> </div>
<div class="line number25 index24 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">drawVietnamFlag() {</code></div>
<div class="line number26 index25 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePtr im;</code></div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*output;</code></div>
<div class="line number28 index27 alt1"> </div>
<div class="line number29 index28 alt2"><code class="cpp spaces">    </code><code class="cpp plain">im = gdImageCreateTrueColor(WIDTH, HEIGHT);</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp plain">output = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"vietnam_flag.png"</code><code class="cpp plain">, </code><code class="cpp string">"wb"</code><code class="cpp plain">);</code></div>
<div class="line number31 index30 alt2"> </div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Draw red background</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(im, 0, 0, WIDTH - 1, HEIGHT - 1, RED);</code></div>
<div class="line number34 index33 alt1"> </div>
<div class="line number35 index34 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Draw yellow star in the center</code></div>
<div class="line number36 index35 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">starSize = 60;</code></div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">starX = WIDTH / 2;</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">starY = HEIGHT / 2;</code></div>
<div class="line number39 index38 alt2"> </div>
<div class="line number40 index39 alt1"><code class="cpp spaces">    </code><code class="cpp plain">drawStar(im, starX, starY, starSize, starSize / 2, YELLOW);</code></div>
<div class="line number41 index40 alt2"> </div>
<div class="line number42 index41 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePng(im, output);</code></div>
<div class="line number43 index42 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(output);</code></div>
<div class="line number44 index43 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageDestroy(im);</code></div>
<div class="line number45 index44 alt2"><code class="cpp plain">}</code></div>
<div class="line number46 index45 alt1"> </div>
<div class="line number47 index46 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number48 index47 alt1"><code class="cpp spaces">    </code><code class="cpp plain">drawVietnamFlag();</code></div>
<div class="line number49 index48 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number50 index49 alt1"><code class="cpp plain">}</code></div>
</div>
<div class="line number40 index39 alt1">
<div class="line number1 index0 alt2"><code class="cpp preprocessor"></code><code class="cpp plain"><img alt="" height="267" src="/images/vietnam_flag.png" width="400"/></code></div>
<h2>Bangladesh</h2>
<div class="line number1 index0 alt2">
<div>
<div class="syntaxhighlighter cpp" id="highlighter_932623">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="cpp preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="cpp preprocessor">#define WIDTH 600</code></div>
<div class="line number6 index5 alt1"><code class="cpp preprocessor">#define HEIGHT 400</code></div>
<div class="line number7 index6 alt2"><code class="cpp preprocessor">#define GREEN 0x138808  // Green color</code></div>
<div class="line number8 index7 alt1"><code class="cpp preprocessor">#define RED 0xE30A17     // Red color</code></div>
<div class="line number9 index8 alt2"> </div>
<div class="line number10 index9 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">drawBangladeshFlag() {</code></div>
<div class="line number11 index10 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePtr im;</code></div>
<div class="line number12 index11 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*output;</code></div>
<div class="line number13 index12 alt2"> </div>
<div class="line number14 index13 alt1"><code class="cpp spaces">    </code><code class="cpp plain">im = gdImageCreateTrueColor(WIDTH, HEIGHT);</code></div>
<div class="line number15 index14 alt2"><code class="cpp spaces">    </code><code class="cpp plain">output = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"bangladesh_flag.png"</code><code class="cpp plain">, </code><code class="cpp string">"wb"</code><code class="cpp plain">);</code></div>
<div class="line number16 index15 alt1"> </div>
<div class="line number17 index16 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Draw green background</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(im, 0, 0, WIDTH - 1, HEIGHT - 1, GREEN);</code></div>
<div class="line number19 index18 alt2"> </div>
<div class="line number20 index19 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Draw red circle</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">centerX = WIDTH / 2;</code></div>
<div class="line number22 index21 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">centerY = HEIGHT / 2;</code></div>
<div class="line number23 index22 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">circleRadius = 100;</code></div>
<div class="line number24 index23 alt1"> </div>
<div class="line number25 index24 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledEllipse(im, centerX, centerY, circleRadius * 2, circleRadius * 2, RED);</code></div>
<div class="line number26 index25 alt1"> </div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePng(im, output);</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(output);</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageDestroy(im);</code></div>
<div class="line number30 index29 alt1"><code class="cpp plain">}</code></div>
<div class="line number31 index30 alt2"> </div>
<div class="line number32 index31 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">    </code><code class="cpp plain">drawBangladeshFlag();</code></div>
<div class="line number34 index33 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number35 index34 alt2"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class="line number40 index39 alt1">
<div class="line number1 index0 alt2"><code class="cpp preprocessor"></code></div>
<div class="line number35 index34 alt2"><code class="cpp plain"><img alt="" height="267" src="/images/bangladesh_flag.png" width="400"/></code></div>
<h2>Laos</h2>
<div class="line number35 index34 alt2">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="cpp preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="cpp preprocessor">#define WIDTH 600</code></div>
<div class="line number6 index5 alt1"><code class="cpp preprocessor">#define HEIGHT 400</code></div>
<div class="line number7 index6 alt2"><code class="cpp preprocessor">#define RED 0xCE1126    // Red color</code></div>
<div class="line number8 index7 alt1"><code class="cpp preprocessor">#define WHITE 0xFFFFFF  // White color</code></div>
<div class="line number9 index8 alt2"><code class="cpp preprocessor">#define BLUE 0x0033A0   // Blue color</code></div>
<div class="line number10 index9 alt1"> </div>
<div class="line number11 index10 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">drawLaosFlag() {</code></div>
<div class="line number12 index11 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePtr im;</code></div>
<div class="line number13 index12 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*output;</code></div>
<div class="line number14 index13 alt1"> </div>
<div class="line number15 index14 alt2"><code class="cpp spaces">    </code><code class="cpp plain">im = gdImageCreateTrueColor(WIDTH, HEIGHT);</code></div>
<div class="line number16 index15 alt1"><code class="cpp spaces">    </code><code class="cpp plain">output = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"laos_flag.png"</code><code class="cpp plain">, </code><code class="cpp string">"wb"</code><code class="cpp plain">);</code></div>
<div class="line number17 index16 alt2"> </div>
<div class="line number18 index17 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Draw red background</code></div>
<div class="line number19 index18 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(im, 0, 0, WIDTH - 1, HEIGHT - 1, RED);</code></div>
<div class="line number20 index19 alt1"> </div>
<div class="line number21 index20 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Draw blue rectangle (symbolizing the Mekong River)</code></div>
<div class="line number22 index21 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">blueRectWidth = WIDTH;</code></div>
<div class="line number23 index22 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">blueRectHeight = HEIGHT / 2;  </code><code class="cpp comments">// Increase the height</code></div>
<div class="line number24 index23 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">blueRectX = 0;</code></div>
<div class="line number25 index24 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">blueRectY = HEIGHT / 2 - blueRectHeight / 2;</code></div>
<div class="line number26 index25 alt1"> </div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(im, blueRectX, blueRectY, blueRectX + blueRectWidth, blueRectY + blueRectHeight, BLUE);</code></div>
<div class="line number28 index27 alt1"> </div>
<div class="line number29 index28 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Draw white circle</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">centerX = WIDTH / 2;</code></div>
<div class="line number31 index30 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">centerY = HEIGHT / 2;</code></div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">circleRadius = HEIGHT / 8;  </code><code class="cpp comments">// Adjusted radius</code></div>
<div class="line number33 index32 alt2"> </div>
<div class="line number34 index33 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledEllipse(im, centerX, centerY, circleRadius * 2, circleRadius * 2, WHITE);</code></div>
<div class="line number35 index34 alt2"> </div>
<div class="line number36 index35 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePng(im, output);</code></div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(output);</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageDestroy(im);</code></div>
<div class="line number39 index38 alt2"><code class="cpp plain">}</code></div>
<div class="line number40 index39 alt1"> </div>
<div class="line number41 index40 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number42 index41 alt1"><code class="cpp spaces">    </code><code class="cpp plain">drawLaosFlag();</code></div>
<div class="line number43 index42 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number44 index43 alt1"><code class="cpp plain">}</code></div>
</div>
</div>
<div class="line number1 index0 alt2"><code class="cpp preprocessor"></code></div>
<div class="line number44 index43 alt1"><code class="cpp plain"><img alt="" height="267" src="/images/laos_flag.png" width="400"/></code></div>
<h2>Russia</h2>
<div class="line number44 index43 alt1">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="cpp preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="cpp preprocessor">#define WIDTH 600</code></div>
<div class="line number6 index5 alt1"><code class="cpp preprocessor">#define HEIGHT 400</code></div>
<div class="line number7 index6 alt2"><code class="cpp preprocessor">#define WHITE 0xFFFFFF  // White color</code></div>
<div class="line number8 index7 alt1"><code class="cpp preprocessor">#define BLUE 0x0033A0   // Blue color</code></div>
<div class="line number9 index8 alt2"><code class="cpp preprocessor">#define RED 0xD52B1E    // Red color</code></div>
<div class="line number10 index9 alt1"> </div>
<div class="line number11 index10 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">drawRussiaFlag() {</code></div>
<div class="line number12 index11 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePtr im;</code></div>
<div class="line number13 index12 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*output;</code></div>
<div class="line number14 index13 alt1"> </div>
<div class="line number15 index14 alt2"><code class="cpp spaces">    </code><code class="cpp plain">im = gdImageCreateTrueColor(WIDTH, HEIGHT);</code></div>
<div class="line number16 index15 alt1"><code class="cpp spaces">    </code><code class="cpp plain">output = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"russia_flag.png"</code><code class="cpp plain">, </code><code class="cpp string">"wb"</code><code class="cpp plain">);</code></div>
<div class="line number17 index16 alt2"> </div>
<div class="line number18 index17 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Draw white rectangle (top part)</code></div>
<div class="line number19 index18 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">whiteRectWidth = WIDTH;</code></div>
<div class="line number20 index19 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">whiteRectHeight = HEIGHT / 3;</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">whiteRectX = 0;</code></div>
<div class="line number22 index21 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">whiteRectY = 0;</code></div>
<div class="line number23 index22 alt2"> </div>
<div class="line number24 index23 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(im, whiteRectX, whiteRectY, whiteRectX + whiteRectWidth, whiteRectY + whiteRectHeight, WHITE);</code></div>
<div class="line number25 index24 alt2"> </div>
<div class="line number26 index25 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Draw blue rectangle (middle part)</code></div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">blueRectWidth = WIDTH;</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">blueRectHeight = HEIGHT / 3;</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">blueRectX = 0;</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">blueRectY = HEIGHT / 3;</code></div>
<div class="line number31 index30 alt2"> </div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(im, blueRectX, blueRectY, blueRectX + blueRectWidth, blueRectY + blueRectHeight, BLUE);</code></div>
<div class="line number33 index32 alt2"> </div>
<div class="line number34 index33 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Draw red rectangle (bottom part)</code></div>
<div class="line number35 index34 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">redRectWidth = WIDTH;</code></div>
<div class="line number36 index35 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">redRectHeight = HEIGHT / 3;</code></div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">redRectX = 0;</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">redRectY = 2 * HEIGHT / 3;</code></div>
<div class="line number39 index38 alt2"> </div>
<div class="line number40 index39 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(im, redRectX, redRectY, redRectX + redRectWidth, redRectY + redRectHeight, RED);</code></div>
<div class="line number41 index40 alt2"> </div>
<div class="line number42 index41 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePng(im, output);</code></div>
<div class="line number43 index42 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(output);</code></div>
<div class="line number44 index43 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageDestroy(im);</code></div>
<div class="line number45 index44 alt2"><code class="cpp plain">}</code></div>
<div class="line number46 index45 alt1"> </div>
<div class="line number47 index46 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number48 index47 alt1"><code class="cpp spaces">    </code><code class="cpp plain">drawRussiaFlag();</code></div>
<div class="line number49 index48 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number50 index49 alt1"><code class="cpp plain">}</code></div>
</div>
<div class="line number44 index43 alt1">
<div class="line number1 index0 alt2"><code class="cpp preprocessor"></code><code class="cpp plain"><img alt="" height="267" src="/images/russia_flag.png" width="400"/></code></div>
<h2>Monaco</h2>
<div class="line number1 index0 alt2">
<div>
<div class="syntaxhighlighter cpp" id="highlighter_771935">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"> </div>
<div class="line number4 index3 alt1"><code class="cpp preprocessor">#define WIDTH 600</code></div>
<div class="line number5 index4 alt2"><code class="cpp preprocessor">#define HEIGHT 400</code></div>
<div class="line number6 index5 alt1"><code class="cpp preprocessor">#define RED 0xD50A0A   // Red color</code></div>
<div class="line number7 index6 alt2"><code class="cpp preprocessor">#define WHITE 0xFFFFFF // White color</code></div>
<div class="line number8 index7 alt1"> </div>
<div class="line number9 index8 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">drawMonacoFlag() {</code></div>
<div class="line number10 index9 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePtr im;</code></div>
<div class="line number11 index10 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*output;</code></div>
<div class="line number12 index11 alt1"> </div>
<div class="line number13 index12 alt2"><code class="cpp spaces">    </code><code class="cpp plain">im = gdImageCreateTrueColor(WIDTH, HEIGHT);</code></div>
<div class="line number14 index13 alt1"><code class="cpp spaces">    </code><code class="cpp plain">output = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"monaco_flag.png"</code><code class="cpp plain">, </code><code class="cpp string">"wb"</code><code class="cpp plain">);</code></div>
<div class="line number15 index14 alt2"> </div>
<div class="line number16 index15 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Draw red upper half</code></div>
<div class="line number17 index16 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(im, 0, 0, WIDTH - 1, HEIGHT / 2 - 1, RED);</code></div>
<div class="line number18 index17 alt1"> </div>
<div class="line number19 index18 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Draw white lower half</code></div>
<div class="line number20 index19 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(im, 0, HEIGHT / 2, WIDTH - 1, HEIGHT - 1, WHITE);</code></div>
<div class="line number21 index20 alt2"> </div>
<div class="line number22 index21 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Save the image</code></div>
<div class="line number23 index22 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePng(im, output);</code></div>
<div class="line number24 index23 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(output);</code></div>
<div class="line number25 index24 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageDestroy(im);</code></div>
<div class="line number26 index25 alt1"><code class="cpp plain">}</code></div>
<div class="line number27 index26 alt2"> </div>
<div class="line number28 index27 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">    </code><code class="cpp plain">drawMonacoFlag();</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number31 index30 alt2"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="line number50 index49 alt1">
<div class="line number1 index0 alt2"><code class="cpp preprocessor"></code></div>
<div class="line number31 index30 alt2"><code class="cpp plain"><img alt="" height="267" src="/images/monaco_flag.png" width="400"/></code></div>
<h2>Thailand</h2>
<div class="line number31 index30 alt2">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="cpp preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="cpp preprocessor">#define WIDTH 600</code></div>
<div class="line number6 index5 alt1"><code class="cpp preprocessor">#define HEIGHT 400</code></div>
<div class="line number7 index6 alt2"> </div>
<div class="line number8 index7 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">drawThaiFlag(gdImagePtr im) {</code></div>
<div class="line number9 index8 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">white = gdImageColorAllocate(im, 255, 255, 255);</code></div>
<div class="line number10 index9 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">indigo = gdImageColorAllocate(im, 46, 49, 146);  </code><code class="cpp comments">// 較深的靛藍色</code></div>
<div class="line number11 index10 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">red = gdImageColorAllocate(im, 255, 0, 0);</code></div>
<div class="line number12 index11 alt1"> </div>
<div class="line number13 index12 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Draw white background</code></div>
<div class="line number14 index13 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(im, 0, 0, WIDTH, HEIGHT, white);</code></div>
<div class="line number15 index14 alt2"> </div>
<div class="line number16 index15 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Calculate stripe heights based on the specified ratio</code></div>
<div class="line number17 index16 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">totalStripes = 5;</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">stripeHeights[5] = {1, 1, 2, 1, 1};</code></div>
<div class="line number19 index18 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">totalHeight = 0;</code></div>
<div class="line number20 index19 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; totalStripes; ++i) {</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">        </code><code class="cpp plain">totalHeight += stripeHeights[i];</code></div>
<div class="line number22 index21 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number23 index22 alt2"> </div>
<div class="line number24 index23 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Draw stripes</code></div>
<div class="line number25 index24 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">startY = 0;</code></div>
<div class="line number26 index25 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; totalStripes; ++i) {</code></div>
<div class="line number27 index26 alt2"><code class="cpp spaces">        </code><code class="cpp color1 bold">int</code> <code class="cpp plain">stripeHeight = stripeHeights[i] * HEIGHT / totalHeight;</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">switch</code> <code class="cpp plain">(i % 5) {</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">            </code><code class="cpp keyword bold">case</code> <code class="cpp plain">0: </code><code class="cpp comments">// Red stripe</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">                </code><code class="cpp plain">gdImageFilledRectangle(im, 0, startY, WIDTH, startY + stripeHeight, red);</code></div>
<div class="line number31 index30 alt2"><code class="cpp spaces">                </code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div>
<div class="line number32 index31 alt1"><code class="cpp spaces">            </code><code class="cpp keyword bold">case</code> <code class="cpp plain">1: </code><code class="cpp comments">// White stripe</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">                </code><code class="cpp plain">gdImageFilledRectangle(im, 0, startY, WIDTH, startY + stripeHeight, white);</code></div>
<div class="line number34 index33 alt1"><code class="cpp spaces">                </code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div>
<div class="line number35 index34 alt2"><code class="cpp spaces">            </code><code class="cpp keyword bold">case</code> <code class="cpp plain">2: </code><code class="cpp comments">// Indigo stripe (靛藍色)</code></div>
<div class="line number36 index35 alt1"><code class="cpp spaces">                </code><code class="cpp plain">gdImageFilledRectangle(im, 0, startY, WIDTH, startY + stripeHeight, indigo);</code></div>
<div class="line number37 index36 alt2"><code class="cpp spaces">                </code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">            </code><code class="cpp keyword bold">case</code> <code class="cpp plain">3: </code><code class="cpp comments">// White stripe</code></div>
<div class="line number39 index38 alt2"><code class="cpp spaces">                </code><code class="cpp plain">gdImageFilledRectangle(im, 0, startY, WIDTH, startY + stripeHeight, white);</code></div>
<div class="line number40 index39 alt1"><code class="cpp spaces">                </code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div>
<div class="line number41 index40 alt2"><code class="cpp spaces">            </code><code class="cpp keyword bold">case</code> <code class="cpp plain">4: </code><code class="cpp comments">// Red stripe</code></div>
<div class="line number42 index41 alt1"><code class="cpp spaces">                </code><code class="cpp plain">gdImageFilledRectangle(im, 0, startY, WIDTH, startY + stripeHeight, red);</code></div>
<div class="line number43 index42 alt2"><code class="cpp spaces">                </code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div>
<div class="line number44 index43 alt1"><code class="cpp spaces">        </code><code class="cpp plain">}</code></div>
<div class="line number45 index44 alt2"><code class="cpp spaces">        </code><code class="cpp plain">startY += stripeHeight;</code></div>
<div class="line number46 index45 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number47 index46 alt2"><code class="cpp plain">}</code></div>
<div class="line number48 index47 alt1"> </div>
<div class="line number49 index48 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number50 index49 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePtr im;</code></div>
<div class="line number51 index50 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*outputFile;</code></div>
<div class="line number52 index51 alt1"> </div>
<div class="line number53 index52 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Create a new image with specified width and height</code></div>
<div class="line number54 index53 alt1"><code class="cpp spaces">    </code><code class="cpp plain">im = gdImageCreate(WIDTH, HEIGHT);</code></div>
<div class="line number55 index54 alt2"> </div>
<div class="line number56 index55 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Draw the Thai flag on the image</code></div>
<div class="line number57 index56 alt2"><code class="cpp spaces">    </code><code class="cpp plain">drawThaiFlag(im);</code></div>
<div class="line number58 index57 alt1"> </div>
<div class="line number59 index58 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Open a file for writing</code></div>
<div class="line number60 index59 alt1"><code class="cpp spaces">    </code><code class="cpp plain">outputFile = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"thai_flag.png"</code><code class="cpp plain">, </code><code class="cpp string">"wb"</code><code class="cpp plain">);</code></div>
<div class="line number61 index60 alt2"> </div>
<div class="line number62 index61 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Write the image to the file in PNG format</code></div>
<div class="line number63 index62 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePng(im, outputFile);</code></div>
<div class="line number64 index63 alt1"> </div>
<div class="line number65 index64 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Close the file</code></div>
<div class="line number66 index65 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(outputFile);</code></div>
<div class="line number67 index66 alt2"> </div>
<div class="line number68 index67 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Free the memory used for the image</code></div>
<div class="line number69 index68 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageDestroy(im);</code></div>
<div class="line number70 index69 alt1"> </div>
<div class="line number71 index70 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number72 index71 alt1"><code class="cpp plain">}</code></div>
</div>
<div class="line number31 index30 alt2">
<div class="line number1 index0 alt2"><code class="cpp preprocessor"></code></div>
<div class="line number72 index71 alt1"><code class="cpp plain"><img alt="" height="267" src="/images/thai_flag.png" width="400"/></code></div>
<h2>Ukraine</h2>
<div class="line number72 index71 alt1">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"> </div>
<div class="line number4 index3 alt1"><code class="cpp preprocessor">#define WIDTH 600</code></div>
<div class="line number5 index4 alt2"><code class="cpp preprocessor">#define HEIGHT 400</code></div>
<div class="line number6 index5 alt1"><code class="cpp preprocessor">#define YELLOW 0xFFD100  // Yellow color</code></div>
<div class="line number7 index6 alt2"><code class="cpp preprocessor">#define BLUE 0x0057A6    // Blue color</code></div>
<div class="line number8 index7 alt1"> </div>
<div class="line number9 index8 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">drawUkraineFlag() {</code></div>
<div class="line number10 index9 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePtr im;</code></div>
<div class="line number11 index10 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*output;</code></div>
<div class="line number12 index11 alt1"> </div>
<div class="line number13 index12 alt2"><code class="cpp spaces">    </code><code class="cpp plain">im = gdImageCreateTrueColor(WIDTH, HEIGHT);</code></div>
<div class="line number14 index13 alt1"><code class="cpp spaces">    </code><code class="cpp plain">output = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"ukraine_flag.png"</code><code class="cpp plain">, </code><code class="cpp string">"wb"</code><code class="cpp plain">);</code></div>
<div class="line number15 index14 alt2"> </div>
<div class="line number16 index15 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Allocate yellow and blue colors</code></div>
<div class="line number17 index16 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">yellowIndex = gdImageColorAllocate(im, (YELLOW &gt;&gt; 16) &amp; 0xFF, (YELLOW &gt;&gt; 8) &amp; 0xFF, YELLOW &amp; 0xFF);</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">blueIndex = gdImageColorAllocate(im, (BLUE &gt;&gt; 16) &amp; 0xFF, (BLUE &gt;&gt; 8) &amp; 0xFF, BLUE &amp; 0xFF);</code></div>
<div class="line number19 index18 alt2"> </div>
<div class="line number20 index19 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Draw blue upper half</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(im, 0, 0, WIDTH - 1, HEIGHT / 2 - 1, blueIndex);</code></div>
<div class="line number22 index21 alt1"> </div>
<div class="line number23 index22 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Draw yellow lower half</code></div>
<div class="line number24 index23 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(im, 0, HEIGHT / 2, WIDTH - 1, HEIGHT - 1, yellowIndex);</code></div>
<div class="line number25 index24 alt2"> </div>
<div class="line number26 index25 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Save the image</code></div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePng(im, output);</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(output);</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageDestroy(im);</code></div>
<div class="line number30 index29 alt1"><code class="cpp plain">}</code></div>
<div class="line number31 index30 alt2"> </div>
<div class="line number32 index31 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">    </code><code class="cpp plain">drawUkraineFlag();</code></div>
<div class="line number34 index33 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number35 index34 alt2"><code class="cpp plain">}</code></div>
</div>
<div class="line number72 index71 alt1">
<div class="line number1 index0 alt2"><code class="cpp preprocessor"></code><code class="cpp plain"><img alt="" height="267" src="/images/ukraine_flag.png" width="400"/></code></div>
<h1>Note</h1>
<h2>ssh</h2>
<p>下載putty</p>
<p>在putty資料夾內開啟puttygen.exe做一把金鑰匙</p>
<p>將key儲存在github帳號內(開啟設定點選ssh)</p>
<p>回到puttygen.exe按save private key即可</p>
<p>接著再開啟putty</p>
<p>Host Name輸入github.com</p>
<p>Saved Sessions輸入自己的學號</p>
<p><span>點選proxy改設定</span></p>
<p><span><img alt="" height="359" src="https://41223146.github.io/cp2023/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202023-12-26%20121532.png" width="400"/></span></p>
<p><span>再點選ssh內的Auth裡面Credentials</span></p>
<p><span><img alt="" height="366" src="https://41223146.github.io/cp2023/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202023-12-26%20122114.png" width="400"/></span></p>
<p>就完成了</p>
<h2>key</h2>
<p>使用puttygen.exe定位主機位置獲得key(點Generate)</p>
<p><img alt="" height="288" src="https://41223136.github.io/cp2023/images/puttygen.png" width="400"/></p>
<p>點選之後並在視窗內移動</p>
<p><img alt="" height="288" src="https://41223136.github.io/cp2023/images/puttygen1.png" width="400"/></p>
<p>複製ssh-rsa的內容<span>全部</span></p>
<p>再到github帳號setting的ssh and gpg keys新增一把key</p>
<p>把剛剛複製的key-rsa貼上之後點save private key 即可!</p>
<p>儲存到<span>tinyc-data-home<span> </span></span>名稱:學號</p>
<p>將鑰匙儲存在自己的USB當中</p>
<p></p><h1>課程評分</h1>
<p>課程評分:</p>
<p>線上測驗、期中網站與簡報、期末網站與簡報.</p>
<p>線上測驗:</p>
<p>建立帳號後 (<span>請將密碼寫入手機的備忘錄</span>), 每週不定時進行.</p>
<p>期中網站評分與簡報:</p>
<p>期中考前兩週開始進行.</p>
<p>期末網站評分與簡報:</p>
<p>期末考前兩週開始進行.</p>
<p>期中成績計算:</p>
<p>期中考與之前各週線上測驗成績平均</p>
<p>學期成績計算:</p>
<p>(期中成績與之後各週線上測驗成績平均)*60%+(期中網站與簡報成績)*20%+(期末網站與簡報成績)*20%</p>
<h1>SSH</h1>
<p>下載putty</p>
<p>在putty資料夾內開啟puttygen.exe做一把金鑰匙</p>
<p>將key儲存在github帳號內(開啟設定點選ssh)</p>
<p>回到puttygen.exe按save private key即可</p>
<p>接著再開啟putty</p>
<p>Host Name輸入github.com</p>
<p>Saved Sessions輸入自己的學號</p>
<p><span>點選proxy改設定</span></p>
<p><span><img alt="" height="359" src="https://41223146.github.io/cp2023/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202023-12-26%20121532.png" width="400"/></span></p>
<p><span>再點選ssh內的Auth裡面Credentials</span></p>
<p><span><img alt="" height="366" src="https://41223146.github.io/cp2023/images/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202023-12-26%20122114.png" width="400"/></span></p>
<p>就完成了</p>
<h1>KEY</h1>
<p>使用puttygen.exe定位主機位置獲得key(點Generate)</p>
<p><img alt="" height="288" src="https://41223136.github.io/cp2023/images/puttygen.png" width="400"/></p>
<p>點選之後並在視窗內移動</p>
<p><img alt="" height="288" src="https://41223136.github.io/cp2023/images/puttygen1.png" width="400"/></p>
<p>複製ssh-rsa的內容<span>全部</span></p>
<p>再到github帳號setting的ssh and gpg keys新增一把key</p>
<p>把剛剛複製的key-rsa貼上之後點save private key 即可!</p>
<p>儲存到<span>tinyc-data-home<span> </span></span>名稱:學號</p>
<p>將鑰匙儲存在自己的USB當中</p>
<h1>布萊頓</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://en.wikipedia.org/wiki/Python_（程式語言）</span></span></span></span></span></span></a></p>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">例子：</span></span></span></span></span></span></h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</span></span></span></span></span></span></a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://www.geeksforgeeks.org/python-programming-examples/</span></span></span></span></span></span></a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://www.programiz.com/python-programming/examples</span></span></span></span></span></span></a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</span></span></span></span></span></span></a></p>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python教學：</span></span></span></span></span></span></h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://docs.python.org/3/tutorial/</span></span></span></span></span></span></a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python的平衡介紹</span></span></span></span></span></span></a></p>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">縮排（Python採用4個Spaces縮排，以介面執行範圍）</span></span></span></span></span></span></h4>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">變數（</span></span></span></span></span></span><a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python 關鍵字</span></span></span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">）</span></span></span></span></span></span></h4>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">註（#單行註解、三單標註或三雙標註標註多行註解）</span></span></span></span></span></span></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">數</span></span></span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">(整數 int(), 浮點數 float())</span></span></span></span></span></span></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">字串</span></span></span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">（字符串）</span></span></span></span></span></span></h4>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">print (Python 內建函數, </span></span></span></span></span></span><a href="https://docs.python.org/3/library/functions.html#print"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">print()</span></span></span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">函數式)</span></span></span></span></span></span></h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python是控制流程工具</span></span></span></span></span></span></a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">為了</span></span></span></span></span></span></a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">如果</span></span></span></span></span></span></a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">範圍</span></span></span></span></span></span></a></h4>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">開放</span></span></span></span></span></span></h4>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">讀</span></span></span></span></span></span></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">清單</span></span></span></span></span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">元組</span></span></span></span></span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">字典</span></span></span></span></span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">功能</span></span></span></span></span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">嘗試...除了</span></span></span></span></span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">休息時間</span></span></span></span></span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">曾經</span></span></span></span></span></span></a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">類別</span></span></span></span></span></span></a></h4>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">此頁面示範如何在同一頁面下加入多個線上Ace編輯器與執行按鈕（</span></span></span></span></span></span><a href="/downloads/practice_html.txt"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">practice_html.txt</span></span></span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">動態頁面超檔案）。</span></span></span></span></span></span></p>
<p><a href="/downloads/practice_html.txt"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Practice_html.txt</span></span></span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">動態頁面超檔案應該可以在啟動Brython時，設定分割.py檔案放入downloads/py目錄中引用。</span></span></span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">也所有即將出現的對應 html 也使用 Brython 產生，然後編寫為</span></span></span></span></span></span><a href="https://docs.python.org/3/tutorial/classes.html"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">類別</span></span></span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">後，在範例匯入時交叉</span></span></span></span></span></span><a href="https://docs.python.org/3/tutorial/classes.html#instance-objects"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">實例</span></span></span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">引用。</span></span></span></span></span></span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">&lt;!-- 啟動 Brython --&gt;</span></span></span></span></span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
&lt;腳本&gt;</span></span></span></span></span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
視窗.onload=函數(){</span></span></span></span></span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});</span></span></span></span></span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
}</span></span></span></span></span></span><span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">
&lt;/&gt; 腳本</span></span></span></span></span></span></pre>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">從1累加到100：</span></span></span></span></span></span></p>
<p><button id="add1to100"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1加到100</span></span></span></span></span></span></button></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">將 iterable 與 iterator</span></span></span></span></span></span></span></span><a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">相關說明</span></span></span></span></span></span></span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">，利用 Brython 與 Ace Editor 整理頁面。</span></span></span></span></span></span></span></span></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">文件名稱：</span></span></span></span></span></span></span></span><input id="kw_filename" placeholder="輸入檔名" type="text"/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.py</span></span></span></span></span></span></span></span></label> <span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="保存"/></span></span></span></span></span></span></span></span></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">跑步</span></span></span></span></span></span></span></span></button> <button id="kw_show_console1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">輸出</span></span></span></span></span></span></span></span></button> <button id="kw_clear_console1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">明確輸出區</span></span></span></span></span></span></span></span></button><button id="clear_bd1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">清晰的繪圖區</span></span></span></span></span></span></span></span></button><button onclick="window.location.reload()"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">重新載入</span></span></span></span></span></span></span></span></button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">從1累加到100第2部分：</span></span></span></span></span></span></span></span></p>
<p><button id="add1to100part2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1加到100</span></span></span></span></span></span></span></span></button><button id="cango_three_gears"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cango_三_齒輪</span></span></span></span></span></span></span></span></button><button id="bsnake"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">BS蛇</span></span></span></span></span></span></span></span></button><button id="aitetris"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">人工智能俄羅斯區塊鏈</span></span></span></span></span></span></span></span></button><button id="threejsblock"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">旋轉塊</span></span></span></span></span></span></span></span></button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">文件名稱：</span></span></span></span></span></span></span></span><input id="kw_filename2" placeholder="輸入檔名" type="text"/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.py</span></span></span></span></span></span></span></span></label> <span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="保存"/></span></span></span></span></span></span></span></span></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">跑步</span></span></span></span></span></span></span></span></button> <button id="kw_show_console2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">輸出</span></span></span></span></span></span></span></span></button> <button id="kw_clear_console2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">明確輸出區</span></span></span></span></span></span></span></span></button><button id="clear_bd2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">清晰的繪圖區</span></span></span></span></span></span></span></span></button><button onclick="window.location.reload()"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">重新載入</span></span></span></span></span></span></span></span></button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p></div></div></div></div>